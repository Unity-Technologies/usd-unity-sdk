//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr
{
    public class UsdCs
    {
        public static string TfStringPrintf(string fmt)
        {
            string ret = UsdCsPINVOKE.TfStringPrintf(fmt);
            return ret;
        }

        public static string TfSafeString(string ptr)
        {
            string ret = UsdCsPINVOKE.TfSafeString(ptr);
            return ret;
        }

        public static string TfIntToString(int i)
        {
            string ret = UsdCsPINVOKE.TfIntToString(i);
            return ret;
        }

        public static double TfStringToDouble(string txt)
        {
            double ret = UsdCsPINVOKE.TfStringToDouble__SWIG_0(txt);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static int TfStringToLong(string txt, ref bool outOfRange)
        {
            int ret = UsdCsPINVOKE.TfStringToLong__SWIG_0(txt, ref outOfRange);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static int TfStringToLong(string txt)
        {
            int ret = UsdCsPINVOKE.TfStringToLong__SWIG_1(txt);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint TfStringToULong(string txt, ref bool outOfRange)
        {
            uint ret = UsdCsPINVOKE.TfStringToULong__SWIG_0(txt, ref outOfRange);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint TfStringToULong(string txt)
        {
            uint ret = UsdCsPINVOKE.TfStringToULong__SWIG_1(txt);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static long TfStringToInt64(string txt, ref bool outOfRange)
        {
            long ret = UsdCsPINVOKE.TfStringToInt64__SWIG_0(txt, ref outOfRange);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static long TfStringToInt64(string txt)
        {
            long ret = UsdCsPINVOKE.TfStringToInt64__SWIG_1(txt);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static ulong TfStringToUInt64(string txt, ref bool outOfRange)
        {
            ulong ret = UsdCsPINVOKE.TfStringToUInt64__SWIG_0(txt, ref outOfRange);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static ulong TfStringToUInt64(string txt)
        {
            ulong ret = UsdCsPINVOKE.TfStringToUInt64__SWIG_1(txt);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool Tf_StringStartsWithImpl(string s, uint slen, string prefix, uint prelen)
        {
            bool ret = UsdCsPINVOKE.Tf_StringStartsWithImpl(s, slen, prefix, prelen);
            return ret;
        }

        public static bool TfStringStartsWith(string s, string prefix)
        {
            bool ret = UsdCsPINVOKE.TfStringStartsWith__SWIG_0(s, prefix);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool TfStringStartsWith(string s, TfToken prefix)
        {
            bool ret = UsdCsPINVOKE.TfStringStartsWith__SWIG_2(s, TfToken.getCPtr(prefix));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool Tf_StringEndsWithImpl(string s, uint slen, string suffix, uint suflen)
        {
            bool ret = UsdCsPINVOKE.Tf_StringEndsWithImpl(s, slen, suffix, suflen);
            return ret;
        }

        public static bool TfStringEndsWith(string s, string suffix)
        {
            bool ret = UsdCsPINVOKE.TfStringEndsWith__SWIG_0(s, suffix);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool TfStringEndsWith(string s, TfToken suffix)
        {
            bool ret = UsdCsPINVOKE.TfStringEndsWith__SWIG_2(s, TfToken.getCPtr(suffix));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool TfStringContains(string s, string substring)
        {
            bool ret = UsdCsPINVOKE.TfStringContains__SWIG_0(s, substring);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool TfStringContains(string s, TfToken substring)
        {
            bool ret = UsdCsPINVOKE.TfStringContains__SWIG_2(s, TfToken.getCPtr(substring));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringToLower(string source)
        {
            string ret = UsdCsPINVOKE.TfStringToLower(source);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringToUpper(string source)
        {
            string ret = UsdCsPINVOKE.TfStringToUpper(source);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringCapitalize(string source)
        {
            string ret = UsdCsPINVOKE.TfStringCapitalize(source);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringTrimLeft(string s, string trimChars)
        {
            string ret = UsdCsPINVOKE.TfStringTrimLeft__SWIG_0(s, trimChars);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringTrimLeft(string s)
        {
            string ret = UsdCsPINVOKE.TfStringTrimLeft__SWIG_1(s);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringTrimRight(string s, string trimChars)
        {
            string ret = UsdCsPINVOKE.TfStringTrimRight__SWIG_0(s, trimChars);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringTrimRight(string s)
        {
            string ret = UsdCsPINVOKE.TfStringTrimRight__SWIG_1(s);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringTrim(string s, string trimChars)
        {
            string ret = UsdCsPINVOKE.TfStringTrim__SWIG_0(s, trimChars);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringTrim(string s)
        {
            string ret = UsdCsPINVOKE.TfStringTrim__SWIG_1(s);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringGetCommonPrefix(string a, string b)
        {
            string ret = UsdCsPINVOKE.TfStringGetCommonPrefix(a, b);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringGetSuffix(string name, char delimiter)
        {
            string ret = UsdCsPINVOKE.TfStringGetSuffix__SWIG_0(name, delimiter);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringGetSuffix(string name)
        {
            string ret = UsdCsPINVOKE.TfStringGetSuffix__SWIG_1(name);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringGetBeforeSuffix(string name, char delimiter)
        {
            string ret = UsdCsPINVOKE.TfStringGetBeforeSuffix__SWIG_0(name, delimiter);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringGetBeforeSuffix(string name)
        {
            string ret = UsdCsPINVOKE.TfStringGetBeforeSuffix__SWIG_1(name);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfGetBaseName(string fileName)
        {
            string ret = UsdCsPINVOKE.TfGetBaseName(fileName);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfGetPathName(string fileName)
        {
            string ret = UsdCsPINVOKE.TfGetPathName(fileName);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringReplace(string source, string from, string to)
        {
            string ret = UsdCsPINVOKE.TfStringReplace(source, from, to);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringJoin(StdStringVector strings, string separator)
        {
            string ret = UsdCsPINVOKE.TfStringJoin__SWIG_2(StdStringVector.getCPtr(strings), separator);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringJoin(StdStringVector strings)
        {
            string ret = UsdCsPINVOKE.TfStringJoin__SWIG_3(StdStringVector.getCPtr(strings));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringJoin(SWIGTYPE_p_std__setT_std__string_t strings, string separator)
        {
            string ret = UsdCsPINVOKE.TfStringJoin__SWIG_4(SWIGTYPE_p_std__setT_std__string_t.getCPtr(strings), separator);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringJoin(SWIGTYPE_p_std__setT_std__string_t strings)
        {
            string ret = UsdCsPINVOKE.TfStringJoin__SWIG_5(SWIGTYPE_p_std__setT_std__string_t.getCPtr(strings));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfStringSplit(string src, string separator)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfStringSplit(src, separator), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfStringTokenize(string source, string delimiters)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfStringTokenize__SWIG_0(source, delimiters), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfStringTokenize(string source)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfStringTokenize__SWIG_1(source), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_std__setT_std__string_t TfStringTokenizeToSet(string source, string delimiters)
        {
            SWIGTYPE_p_std__setT_std__string_t ret = new SWIGTYPE_p_std__setT_std__string_t(UsdCsPINVOKE.TfStringTokenizeToSet__SWIG_0(source, delimiters), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_std__setT_std__string_t TfStringTokenizeToSet(string source)
        {
            SWIGTYPE_p_std__setT_std__string_t ret = new SWIGTYPE_p_std__setT_std__string_t(UsdCsPINVOKE.TfStringTokenizeToSet__SWIG_1(source), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfQuotedStringTokenize(string source, string delimiters, SWIGTYPE_p_std__string errors)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfQuotedStringTokenize__SWIG_0(source, delimiters, SWIGTYPE_p_std__string.getCPtr(errors)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfQuotedStringTokenize(string source, string delimiters)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfQuotedStringTokenize__SWIG_1(source, delimiters), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfQuotedStringTokenize(string source)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfQuotedStringTokenize__SWIG_2(source), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfMatchedStringTokenize(string source, char openDelimiter, char closeDelimiter, char escapeCharacter, SWIGTYPE_p_std__string errors)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfMatchedStringTokenize__SWIG_0(source, openDelimiter, closeDelimiter, escapeCharacter, SWIGTYPE_p_std__string.getCPtr(errors)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfMatchedStringTokenize(string source, char openDelimiter, char closeDelimiter, char escapeCharacter)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfMatchedStringTokenize__SWIG_1(source, openDelimiter, closeDelimiter, escapeCharacter), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfMatchedStringTokenize(string source, char openDelimiter, char closeDelimiter)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfMatchedStringTokenize__SWIG_2(source, openDelimiter, closeDelimiter), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfMatchedStringTokenize(string source, char openDelimiter, char closeDelimiter, SWIGTYPE_p_std__string errors)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfMatchedStringTokenize__SWIG_3(source, openDelimiter, closeDelimiter, SWIGTYPE_p_std__string.getCPtr(errors)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringify(bool v)
        {
            string ret = UsdCsPINVOKE.TfStringify__SWIG_1(v);
            return ret;
        }

        public static string TfStringify(string arg0)
        {
            string ret = UsdCsPINVOKE.TfStringify__SWIG_2(arg0);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfStringify(float arg0)
        {
            string ret = UsdCsPINVOKE.TfStringify__SWIG_3(arg0);
            return ret;
        }

        public static string TfStringify(double arg0)
        {
            string ret = UsdCsPINVOKE.TfStringify__SWIG_4(arg0);
            return ret;
        }

        public static bool TfDoubleToString(double d, string buffer, int len, bool emitTrailingZero)
        {
            bool ret = UsdCsPINVOKE.TfDoubleToString(d, buffer, len, emitTrailingZero);
            return ret;
        }

        public static string TfStringGlobToRegex(string s)
        {
            string ret = UsdCsPINVOKE.TfStringGlobToRegex(s);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfEscapeString(string arg0)
        {
            string ret = UsdCsPINVOKE.TfEscapeString(arg0);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void TfEscapeStringReplaceChar(SWIGTYPE_p_p_char arg0, SWIGTYPE_p_p_char arg1)
        {
            UsdCsPINVOKE.TfEscapeStringReplaceChar(SWIGTYPE_p_p_char.getCPtr(arg0), SWIGTYPE_p_p_char.getCPtr(arg1));
        }

        public static string TfStringCatPaths(string prefix, string suffix)
        {
            string ret = UsdCsPINVOKE.TfStringCatPaths(prefix, suffix);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool TfIsValidIdentifier(string identifier)
        {
            bool ret = UsdCsPINVOKE.TfIsValidIdentifier(identifier);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfMakeValidIdentifier(string arg0)
        {
            string ret = UsdCsPINVOKE.TfMakeValidIdentifier(arg0);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string TfGetXmlEscapedString(string arg0)
        {
            string ret = UsdCsPINVOKE.TfGetXmlEscapedString(arg0);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void swap(TfToken lhs, TfToken rhs)
        {
            UsdCsPINVOKE.swap__SWIG_0(TfToken.getCPtr(lhs), TfToken.getCPtr(rhs));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static TfTokenVector TfToTokenVector(StdStringVector sv)
        {
            TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.TfToTokenVector(StdStringVector.getCPtr(sv)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector TfToStringVector(TfTokenVector tv)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.TfToStringVector(TfTokenVector.getCPtr(tv)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint TfHashValue(TfToken x)
        {
            uint ret = UsdCsPINVOKE.TfHashValue(TfToken.getCPtr(x));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(TfToken x)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_0(TfToken.getCPtr(x));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string PlugFindPluginResource(SWIGTYPE_p_TfDeclarePtrsT_PlugPlugin_t__Ptr plugin, string path, bool verify)
        {
            string ret = UsdCsPINVOKE.PlugFindPluginResource__SWIG_0(SWIGTYPE_p_TfDeclarePtrsT_PlugPlugin_t__Ptr.getCPtr(plugin), path, verify);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string PlugFindPluginResource(SWIGTYPE_p_TfDeclarePtrsT_PlugPlugin_t__Ptr plugin, string path)
        {
            string ret = UsdCsPINVOKE.PlugFindPluginResource__SWIG_1(SWIGTYPE_p_TfDeclarePtrsT_PlugPlugin_t__Ptr.getCPtr(plugin), path);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfBBox3d b)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_1(GfBBox3d.getCPtr(b));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfInterval i)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_2(GfInterval.getCPtr(i));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfRange1f r)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_3(GfRange1f.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfRange1d r)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_4(GfRange1d.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfRange2d r)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_5(GfRange2d.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfRange3d r)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_6(GfRange3d.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfMatrix2f m)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_7(GfMatrix2f.getCPtr(m));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfMatrix2f m1, GfMatrix2f m2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_0(GfMatrix2f.getCPtr(m1), GfMatrix2f.getCPtr(m2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfMatrix3f m)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_8(GfMatrix3f.getCPtr(m));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfMatrix3f m1, GfMatrix3f m2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_1(GfMatrix3f.getCPtr(m1), GfMatrix3f.getCPtr(m2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfMatrix4f m)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_9(GfMatrix4f.getCPtr(m));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfMatrix4f m1, GfMatrix4f m2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_2(GfMatrix4f.getCPtr(m1), GfMatrix4f.getCPtr(m2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfMatrix2d m)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_10(GfMatrix2d.getCPtr(m));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfMatrix2d m1, GfMatrix2d m2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_3(GfMatrix2d.getCPtr(m1), GfMatrix2d.getCPtr(m2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfMatrix3d m)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_11(GfMatrix3d.getCPtr(m));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfMatrix3d m1, GfMatrix3d m2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_4(GfMatrix3d.getCPtr(m1), GfMatrix3d.getCPtr(m2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfMatrix4d m)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_12(GfMatrix4d.getCPtr(m));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfMatrix4d m1, GfMatrix4d m2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_5(GfMatrix4d.getCPtr(m1), GfMatrix4d.getCPtr(m2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec2i vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_13(GfVec2i.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2i GfCompMult(GfVec2i v1, GfVec2i v2)
        {
            GfVec2i ret = new GfVec2i(UsdCsPINVOKE.GfCompMult__SWIG_0(GfVec2i.getCPtr(v1), GfVec2i.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2i GfCompDiv(GfVec2i v1, GfVec2i v2)
        {
            GfVec2i ret = new GfVec2i(UsdCsPINVOKE.GfCompDiv__SWIG_0(GfVec2i.getCPtr(v1), GfVec2i.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static int GfDot(GfVec2i v1, GfVec2i v2)
        {
            int ret = UsdCsPINVOKE.GfDot__SWIG_0(GfVec2i.getCPtr(v1), GfVec2i.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec2h vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_14(GfVec2h.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2h GfCompMult(GfVec2h v1, GfVec2h v2)
        {
            GfVec2h ret = new GfVec2h(UsdCsPINVOKE.GfCompMult__SWIG_1(GfVec2h.getCPtr(v1), GfVec2h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2h GfCompDiv(GfVec2h v1, GfVec2h v2)
        {
            GfVec2h ret = new GfVec2h(UsdCsPINVOKE.GfCompDiv__SWIG_1(GfVec2h.getCPtr(v1), GfVec2h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfDot(GfVec2h v1, GfVec2h v2)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfDot__SWIG_1(GfVec2h.getCPtr(v1), GfVec2h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfGetLength(GfVec2h v)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfGetLength__SWIG_0(GfVec2h.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfNormalize(GfVec2h v, GfHalf eps)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfNormalize__SWIG_0(GfVec2h.getCPtr(v), GfHalf.getCPtr(eps)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfNormalize(GfVec2h v)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfNormalize__SWIG_1(GfVec2h.getCPtr(v)), true);
            return ret;
        }

        public static GfVec2h GfGetNormalized(GfVec2h v, GfHalf eps)
        {
            GfVec2h ret = new GfVec2h(UsdCsPINVOKE.GfGetNormalized__SWIG_0(GfVec2h.getCPtr(v), GfHalf.getCPtr(eps)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2h GfGetNormalized(GfVec2h v)
        {
            GfVec2h ret = new GfVec2h(UsdCsPINVOKE.GfGetNormalized__SWIG_1(GfVec2h.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2h GfGetProjection(GfVec2h a, GfVec2h b)
        {
            GfVec2h ret = new GfVec2h(UsdCsPINVOKE.GfGetProjection__SWIG_0(GfVec2h.getCPtr(a), GfVec2h.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2h GfGetComplement(GfVec2h a, GfVec2h b)
        {
            GfVec2h ret = new GfVec2h(UsdCsPINVOKE.GfGetComplement__SWIG_0(GfVec2h.getCPtr(a), GfVec2h.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfVec2h v1, GfVec2h v2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_6(GfVec2h.getCPtr(v1), GfVec2h.getCPtr(v2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec2f vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_15(GfVec2f.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2f GfCompMult(GfVec2f v1, GfVec2f v2)
        {
            GfVec2f ret = new GfVec2f(UsdCsPINVOKE.GfCompMult__SWIG_2(GfVec2f.getCPtr(v1), GfVec2f.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2f GfCompDiv(GfVec2f v1, GfVec2f v2)
        {
            GfVec2f ret = new GfVec2f(UsdCsPINVOKE.GfCompDiv__SWIG_2(GfVec2f.getCPtr(v1), GfVec2f.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfDot(GfVec2f v1, GfVec2f v2)
        {
            float ret = UsdCsPINVOKE.GfDot__SWIG_2(GfVec2f.getCPtr(v1), GfVec2f.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfGetLength(GfVec2f v)
        {
            float ret = UsdCsPINVOKE.GfGetLength__SWIG_1(GfVec2f.getCPtr(v));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfNormalize(GfVec2f v, float eps)
        {
            float ret = UsdCsPINVOKE.GfNormalize__SWIG_2(GfVec2f.getCPtr(v), eps);
            return ret;
        }

        public static float GfNormalize(GfVec2f v)
        {
            float ret = UsdCsPINVOKE.GfNormalize__SWIG_3(GfVec2f.getCPtr(v));
            return ret;
        }

        public static GfVec2f GfGetNormalized(GfVec2f v, float eps)
        {
            GfVec2f ret = new GfVec2f(UsdCsPINVOKE.GfGetNormalized__SWIG_2(GfVec2f.getCPtr(v), eps), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2f GfGetNormalized(GfVec2f v)
        {
            GfVec2f ret = new GfVec2f(UsdCsPINVOKE.GfGetNormalized__SWIG_3(GfVec2f.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2f GfGetProjection(GfVec2f a, GfVec2f b)
        {
            GfVec2f ret = new GfVec2f(UsdCsPINVOKE.GfGetProjection__SWIG_1(GfVec2f.getCPtr(a), GfVec2f.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2f GfGetComplement(GfVec2f a, GfVec2f b)
        {
            GfVec2f ret = new GfVec2f(UsdCsPINVOKE.GfGetComplement__SWIG_1(GfVec2f.getCPtr(a), GfVec2f.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfVec2f v1, GfVec2f v2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_7(GfVec2f.getCPtr(v1), GfVec2f.getCPtr(v2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec2d vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_16(GfVec2d.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2d GfCompMult(GfVec2d v1, GfVec2d v2)
        {
            GfVec2d ret = new GfVec2d(UsdCsPINVOKE.GfCompMult__SWIG_3(GfVec2d.getCPtr(v1), GfVec2d.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2d GfCompDiv(GfVec2d v1, GfVec2d v2)
        {
            GfVec2d ret = new GfVec2d(UsdCsPINVOKE.GfCompDiv__SWIG_3(GfVec2d.getCPtr(v1), GfVec2d.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfDot(GfVec2d v1, GfVec2d v2)
        {
            double ret = UsdCsPINVOKE.GfDot__SWIG_3(GfVec2d.getCPtr(v1), GfVec2d.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfGetLength(GfVec2d v)
        {
            double ret = UsdCsPINVOKE.GfGetLength__SWIG_2(GfVec2d.getCPtr(v));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfNormalize(GfVec2d v, double eps)
        {
            double ret = UsdCsPINVOKE.GfNormalize__SWIG_4(GfVec2d.getCPtr(v), eps);
            return ret;
        }

        public static double GfNormalize(GfVec2d v)
        {
            double ret = UsdCsPINVOKE.GfNormalize__SWIG_5(GfVec2d.getCPtr(v));
            return ret;
        }

        public static GfVec2d GfGetNormalized(GfVec2d v, double eps)
        {
            GfVec2d ret = new GfVec2d(UsdCsPINVOKE.GfGetNormalized__SWIG_4(GfVec2d.getCPtr(v), eps), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2d GfGetNormalized(GfVec2d v)
        {
            GfVec2d ret = new GfVec2d(UsdCsPINVOKE.GfGetNormalized__SWIG_5(GfVec2d.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2d GfGetProjection(GfVec2d a, GfVec2d b)
        {
            GfVec2d ret = new GfVec2d(UsdCsPINVOKE.GfGetProjection__SWIG_2(GfVec2d.getCPtr(a), GfVec2d.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec2d GfGetComplement(GfVec2d a, GfVec2d b)
        {
            GfVec2d ret = new GfVec2d(UsdCsPINVOKE.GfGetComplement__SWIG_2(GfVec2d.getCPtr(a), GfVec2d.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfVec2d v1, GfVec2d v2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_8(GfVec2d.getCPtr(v1), GfVec2d.getCPtr(v2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec3i vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_17(GfVec3i.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3i GfCompMult(GfVec3i v1, GfVec3i v2)
        {
            GfVec3i ret = new GfVec3i(UsdCsPINVOKE.GfCompMult__SWIG_4(GfVec3i.getCPtr(v1), GfVec3i.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3i GfCompDiv(GfVec3i v1, GfVec3i v2)
        {
            GfVec3i ret = new GfVec3i(UsdCsPINVOKE.GfCompDiv__SWIG_4(GfVec3i.getCPtr(v1), GfVec3i.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static int GfDot(GfVec3i v1, GfVec3i v2)
        {
            int ret = UsdCsPINVOKE.GfDot__SWIG_4(GfVec3i.getCPtr(v1), GfVec3i.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec3h vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_18(GfVec3h.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3h GfCompMult(GfVec3h v1, GfVec3h v2)
        {
            GfVec3h ret = new GfVec3h(UsdCsPINVOKE.GfCompMult__SWIG_5(GfVec3h.getCPtr(v1), GfVec3h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3h GfCompDiv(GfVec3h v1, GfVec3h v2)
        {
            GfVec3h ret = new GfVec3h(UsdCsPINVOKE.GfCompDiv__SWIG_5(GfVec3h.getCPtr(v1), GfVec3h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfDot(GfVec3h v1, GfVec3h v2)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfDot__SWIG_5(GfVec3h.getCPtr(v1), GfVec3h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfGetLength(GfVec3h v)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfGetLength__SWIG_3(GfVec3h.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfNormalize(GfVec3h v, GfHalf eps)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfNormalize__SWIG_6(GfVec3h.getCPtr(v), GfHalf.getCPtr(eps)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfNormalize(GfVec3h v)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfNormalize__SWIG_7(GfVec3h.getCPtr(v)), true);
            return ret;
        }

        public static GfVec3h GfGetNormalized(GfVec3h v, GfHalf eps)
        {
            GfVec3h ret = new GfVec3h(UsdCsPINVOKE.GfGetNormalized__SWIG_6(GfVec3h.getCPtr(v), GfHalf.getCPtr(eps)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3h GfGetNormalized(GfVec3h v)
        {
            GfVec3h ret = new GfVec3h(UsdCsPINVOKE.GfGetNormalized__SWIG_7(GfVec3h.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3h GfGetProjection(GfVec3h a, GfVec3h b)
        {
            GfVec3h ret = new GfVec3h(UsdCsPINVOKE.GfGetProjection__SWIG_3(GfVec3h.getCPtr(a), GfVec3h.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3h GfGetComplement(GfVec3h a, GfVec3h b)
        {
            GfVec3h ret = new GfVec3h(UsdCsPINVOKE.GfGetComplement__SWIG_3(GfVec3h.getCPtr(a), GfVec3h.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfVec3h v1, GfVec3h v2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_9(GfVec3h.getCPtr(v1), GfVec3h.getCPtr(v2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfOrthogonalizeBasis(GfVec3h tx, GfVec3h ty, GfVec3h tz, bool normalize, double eps)
        {
            bool ret = UsdCsPINVOKE.GfOrthogonalizeBasis__SWIG_0(GfVec3h.getCPtr(tx), GfVec3h.getCPtr(ty), GfVec3h.getCPtr(tz), normalize, eps);
            return ret;
        }

        public static bool GfOrthogonalizeBasis(GfVec3h tx, GfVec3h ty, GfVec3h tz, bool normalize)
        {
            bool ret = UsdCsPINVOKE.GfOrthogonalizeBasis__SWIG_1(GfVec3h.getCPtr(tx), GfVec3h.getCPtr(ty), GfVec3h.getCPtr(tz), normalize);
            return ret;
        }

        public static void GfBuildOrthonormalFrame(GfVec3h v0, GfVec3h v1, GfVec3h v2, GfHalf eps)
        {
            UsdCsPINVOKE.GfBuildOrthonormalFrame__SWIG_0(GfVec3h.getCPtr(v0), GfVec3h.getCPtr(v1), GfVec3h.getCPtr(v2), GfHalf.getCPtr(eps));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void GfBuildOrthonormalFrame(GfVec3h v0, GfVec3h v1, GfVec3h v2)
        {
            UsdCsPINVOKE.GfBuildOrthonormalFrame__SWIG_1(GfVec3h.getCPtr(v0), GfVec3h.getCPtr(v1), GfVec3h.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static GfVec3h GfCross(GfVec3h v1, GfVec3h v2)
        {
            GfVec3h ret = new GfVec3h(UsdCsPINVOKE.GfCross__SWIG_0(GfVec3h.getCPtr(v1), GfVec3h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3h GfSlerp(double alpha, GfVec3h v0, GfVec3h v1)
        {
            GfVec3h ret = new GfVec3h(UsdCsPINVOKE.GfSlerp__SWIG_0(alpha, GfVec3h.getCPtr(v0), GfVec3h.getCPtr(v1)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec3f vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_19(GfVec3f.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3f GfCompMult(GfVec3f v1, GfVec3f v2)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.GfCompMult__SWIG_6(GfVec3f.getCPtr(v1), GfVec3f.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3f GfCompDiv(GfVec3f v1, GfVec3f v2)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.GfCompDiv__SWIG_6(GfVec3f.getCPtr(v1), GfVec3f.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfDot(GfVec3f v1, GfVec3f v2)
        {
            float ret = UsdCsPINVOKE.GfDot__SWIG_6(GfVec3f.getCPtr(v1), GfVec3f.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfGetLength(GfVec3f v)
        {
            float ret = UsdCsPINVOKE.GfGetLength__SWIG_4(GfVec3f.getCPtr(v));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfNormalize(GfVec3f v, float eps)
        {
            float ret = UsdCsPINVOKE.GfNormalize__SWIG_8(GfVec3f.getCPtr(v), eps);
            return ret;
        }

        public static float GfNormalize(GfVec3f v)
        {
            float ret = UsdCsPINVOKE.GfNormalize__SWIG_9(GfVec3f.getCPtr(v));
            return ret;
        }

        public static GfVec3f GfGetNormalized(GfVec3f v, float eps)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.GfGetNormalized__SWIG_8(GfVec3f.getCPtr(v), eps), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3f GfGetNormalized(GfVec3f v)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.GfGetNormalized__SWIG_9(GfVec3f.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3f GfGetProjection(GfVec3f a, GfVec3f b)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.GfGetProjection__SWIG_4(GfVec3f.getCPtr(a), GfVec3f.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3f GfGetComplement(GfVec3f a, GfVec3f b)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.GfGetComplement__SWIG_4(GfVec3f.getCPtr(a), GfVec3f.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfVec3f v1, GfVec3f v2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_10(GfVec3f.getCPtr(v1), GfVec3f.getCPtr(v2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfOrthogonalizeBasis(GfVec3f tx, GfVec3f ty, GfVec3f tz, bool normalize, double eps)
        {
            bool ret = UsdCsPINVOKE.GfOrthogonalizeBasis__SWIG_2(GfVec3f.getCPtr(tx), GfVec3f.getCPtr(ty), GfVec3f.getCPtr(tz), normalize, eps);
            return ret;
        }

        public static bool GfOrthogonalizeBasis(GfVec3f tx, GfVec3f ty, GfVec3f tz, bool normalize)
        {
            bool ret = UsdCsPINVOKE.GfOrthogonalizeBasis__SWIG_3(GfVec3f.getCPtr(tx), GfVec3f.getCPtr(ty), GfVec3f.getCPtr(tz), normalize);
            return ret;
        }

        public static void GfBuildOrthonormalFrame(GfVec3f v0, GfVec3f v1, GfVec3f v2, float eps)
        {
            UsdCsPINVOKE.GfBuildOrthonormalFrame__SWIG_2(GfVec3f.getCPtr(v0), GfVec3f.getCPtr(v1), GfVec3f.getCPtr(v2), eps);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void GfBuildOrthonormalFrame(GfVec3f v0, GfVec3f v1, GfVec3f v2)
        {
            UsdCsPINVOKE.GfBuildOrthonormalFrame__SWIG_3(GfVec3f.getCPtr(v0), GfVec3f.getCPtr(v1), GfVec3f.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static GfVec3f GfCross(GfVec3f v1, GfVec3f v2)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.GfCross__SWIG_1(GfVec3f.getCPtr(v1), GfVec3f.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3f GfSlerp(double alpha, GfVec3f v0, GfVec3f v1)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.GfSlerp__SWIG_1(alpha, GfVec3f.getCPtr(v0), GfVec3f.getCPtr(v1)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec3d vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_20(GfVec3d.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3d GfCompMult(GfVec3d v1, GfVec3d v2)
        {
            GfVec3d ret = new GfVec3d(UsdCsPINVOKE.GfCompMult__SWIG_7(GfVec3d.getCPtr(v1), GfVec3d.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3d GfCompDiv(GfVec3d v1, GfVec3d v2)
        {
            GfVec3d ret = new GfVec3d(UsdCsPINVOKE.GfCompDiv__SWIG_7(GfVec3d.getCPtr(v1), GfVec3d.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfDot(GfVec3d v1, GfVec3d v2)
        {
            double ret = UsdCsPINVOKE.GfDot__SWIG_7(GfVec3d.getCPtr(v1), GfVec3d.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfGetLength(GfVec3d v)
        {
            double ret = UsdCsPINVOKE.GfGetLength__SWIG_5(GfVec3d.getCPtr(v));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfNormalize(GfVec3d v, double eps)
        {
            double ret = UsdCsPINVOKE.GfNormalize__SWIG_10(GfVec3d.getCPtr(v), eps);
            return ret;
        }

        public static double GfNormalize(GfVec3d v)
        {
            double ret = UsdCsPINVOKE.GfNormalize__SWIG_11(GfVec3d.getCPtr(v));
            return ret;
        }

        public static GfVec3d GfGetNormalized(GfVec3d v, double eps)
        {
            GfVec3d ret = new GfVec3d(UsdCsPINVOKE.GfGetNormalized__SWIG_10(GfVec3d.getCPtr(v), eps), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3d GfGetNormalized(GfVec3d v)
        {
            GfVec3d ret = new GfVec3d(UsdCsPINVOKE.GfGetNormalized__SWIG_11(GfVec3d.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3d GfGetProjection(GfVec3d a, GfVec3d b)
        {
            GfVec3d ret = new GfVec3d(UsdCsPINVOKE.GfGetProjection__SWIG_5(GfVec3d.getCPtr(a), GfVec3d.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3d GfGetComplement(GfVec3d a, GfVec3d b)
        {
            GfVec3d ret = new GfVec3d(UsdCsPINVOKE.GfGetComplement__SWIG_5(GfVec3d.getCPtr(a), GfVec3d.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfVec3d v1, GfVec3d v2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_11(GfVec3d.getCPtr(v1), GfVec3d.getCPtr(v2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfOrthogonalizeBasis(GfVec3d tx, GfVec3d ty, GfVec3d tz, bool normalize, double eps)
        {
            bool ret = UsdCsPINVOKE.GfOrthogonalizeBasis__SWIG_4(GfVec3d.getCPtr(tx), GfVec3d.getCPtr(ty), GfVec3d.getCPtr(tz), normalize, eps);
            return ret;
        }

        public static bool GfOrthogonalizeBasis(GfVec3d tx, GfVec3d ty, GfVec3d tz, bool normalize)
        {
            bool ret = UsdCsPINVOKE.GfOrthogonalizeBasis__SWIG_5(GfVec3d.getCPtr(tx), GfVec3d.getCPtr(ty), GfVec3d.getCPtr(tz), normalize);
            return ret;
        }

        public static void GfBuildOrthonormalFrame(GfVec3d v0, GfVec3d v1, GfVec3d v2, double eps)
        {
            UsdCsPINVOKE.GfBuildOrthonormalFrame__SWIG_4(GfVec3d.getCPtr(v0), GfVec3d.getCPtr(v1), GfVec3d.getCPtr(v2), eps);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void GfBuildOrthonormalFrame(GfVec3d v0, GfVec3d v1, GfVec3d v2)
        {
            UsdCsPINVOKE.GfBuildOrthonormalFrame__SWIG_5(GfVec3d.getCPtr(v0), GfVec3d.getCPtr(v1), GfVec3d.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static GfVec3d GfCross(GfVec3d v1, GfVec3d v2)
        {
            GfVec3d ret = new GfVec3d(UsdCsPINVOKE.GfCross__SWIG_2(GfVec3d.getCPtr(v1), GfVec3d.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3d GfSlerp(double alpha, GfVec3d v0, GfVec3d v1)
        {
            GfVec3d ret = new GfVec3d(UsdCsPINVOKE.GfSlerp__SWIG_2(alpha, GfVec3d.getCPtr(v0), GfVec3d.getCPtr(v1)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec4i vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_21(GfVec4i.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4i GfCompMult(GfVec4i v1, GfVec4i v2)
        {
            GfVec4i ret = new GfVec4i(UsdCsPINVOKE.GfCompMult__SWIG_8(GfVec4i.getCPtr(v1), GfVec4i.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4i GfCompDiv(GfVec4i v1, GfVec4i v2)
        {
            GfVec4i ret = new GfVec4i(UsdCsPINVOKE.GfCompDiv__SWIG_8(GfVec4i.getCPtr(v1), GfVec4i.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static int GfDot(GfVec4i v1, GfVec4i v2)
        {
            int ret = UsdCsPINVOKE.GfDot__SWIG_8(GfVec4i.getCPtr(v1), GfVec4i.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec4h vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_22(GfVec4h.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4h GfCompMult(GfVec4h v1, GfVec4h v2)
        {
            GfVec4h ret = new GfVec4h(UsdCsPINVOKE.GfCompMult__SWIG_9(GfVec4h.getCPtr(v1), GfVec4h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4h GfCompDiv(GfVec4h v1, GfVec4h v2)
        {
            GfVec4h ret = new GfVec4h(UsdCsPINVOKE.GfCompDiv__SWIG_9(GfVec4h.getCPtr(v1), GfVec4h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfDot(GfVec4h v1, GfVec4h v2)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfDot__SWIG_9(GfVec4h.getCPtr(v1), GfVec4h.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfGetLength(GfVec4h v)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfGetLength__SWIG_6(GfVec4h.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfNormalize(GfVec4h v, GfHalf eps)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfNormalize__SWIG_12(GfVec4h.getCPtr(v), GfHalf.getCPtr(eps)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfHalf GfNormalize(GfVec4h v)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.GfNormalize__SWIG_13(GfVec4h.getCPtr(v)), true);
            return ret;
        }

        public static GfVec4h GfGetNormalized(GfVec4h v, GfHalf eps)
        {
            GfVec4h ret = new GfVec4h(UsdCsPINVOKE.GfGetNormalized__SWIG_12(GfVec4h.getCPtr(v), GfHalf.getCPtr(eps)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4h GfGetNormalized(GfVec4h v)
        {
            GfVec4h ret = new GfVec4h(UsdCsPINVOKE.GfGetNormalized__SWIG_13(GfVec4h.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4h GfGetProjection(GfVec4h a, GfVec4h b)
        {
            GfVec4h ret = new GfVec4h(UsdCsPINVOKE.GfGetProjection__SWIG_6(GfVec4h.getCPtr(a), GfVec4h.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4h GfGetComplement(GfVec4h a, GfVec4h b)
        {
            GfVec4h ret = new GfVec4h(UsdCsPINVOKE.GfGetComplement__SWIG_6(GfVec4h.getCPtr(a), GfVec4h.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfVec4h v1, GfVec4h v2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_12(GfVec4h.getCPtr(v1), GfVec4h.getCPtr(v2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec4f vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_23(GfVec4f.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4f GfCompMult(GfVec4f v1, GfVec4f v2)
        {
            GfVec4f ret = new GfVec4f(UsdCsPINVOKE.GfCompMult__SWIG_10(GfVec4f.getCPtr(v1), GfVec4f.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4f GfCompDiv(GfVec4f v1, GfVec4f v2)
        {
            GfVec4f ret = new GfVec4f(UsdCsPINVOKE.GfCompDiv__SWIG_10(GfVec4f.getCPtr(v1), GfVec4f.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfDot(GfVec4f v1, GfVec4f v2)
        {
            float ret = UsdCsPINVOKE.GfDot__SWIG_10(GfVec4f.getCPtr(v1), GfVec4f.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfGetLength(GfVec4f v)
        {
            float ret = UsdCsPINVOKE.GfGetLength__SWIG_7(GfVec4f.getCPtr(v));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfNormalize(GfVec4f v, float eps)
        {
            float ret = UsdCsPINVOKE.GfNormalize__SWIG_14(GfVec4f.getCPtr(v), eps);
            return ret;
        }

        public static float GfNormalize(GfVec4f v)
        {
            float ret = UsdCsPINVOKE.GfNormalize__SWIG_15(GfVec4f.getCPtr(v));
            return ret;
        }

        public static GfVec4f GfGetNormalized(GfVec4f v, float eps)
        {
            GfVec4f ret = new GfVec4f(UsdCsPINVOKE.GfGetNormalized__SWIG_14(GfVec4f.getCPtr(v), eps), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4f GfGetNormalized(GfVec4f v)
        {
            GfVec4f ret = new GfVec4f(UsdCsPINVOKE.GfGetNormalized__SWIG_15(GfVec4f.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4f GfGetProjection(GfVec4f a, GfVec4f b)
        {
            GfVec4f ret = new GfVec4f(UsdCsPINVOKE.GfGetProjection__SWIG_7(GfVec4f.getCPtr(a), GfVec4f.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4f GfGetComplement(GfVec4f a, GfVec4f b)
        {
            GfVec4f ret = new GfVec4f(UsdCsPINVOKE.GfGetComplement__SWIG_7(GfVec4f.getCPtr(a), GfVec4f.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfVec4f v1, GfVec4f v2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_13(GfVec4f.getCPtr(v1), GfVec4f.getCPtr(v2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfVec4d vec)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_24(GfVec4d.getCPtr(vec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4d GfCompMult(GfVec4d v1, GfVec4d v2)
        {
            GfVec4d ret = new GfVec4d(UsdCsPINVOKE.GfCompMult__SWIG_11(GfVec4d.getCPtr(v1), GfVec4d.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4d GfCompDiv(GfVec4d v1, GfVec4d v2)
        {
            GfVec4d ret = new GfVec4d(UsdCsPINVOKE.GfCompDiv__SWIG_11(GfVec4d.getCPtr(v1), GfVec4d.getCPtr(v2)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfDot(GfVec4d v1, GfVec4d v2)
        {
            double ret = UsdCsPINVOKE.GfDot__SWIG_11(GfVec4d.getCPtr(v1), GfVec4d.getCPtr(v2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfGetLength(GfVec4d v)
        {
            double ret = UsdCsPINVOKE.GfGetLength__SWIG_8(GfVec4d.getCPtr(v));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfNormalize(GfVec4d v, double eps)
        {
            double ret = UsdCsPINVOKE.GfNormalize__SWIG_16(GfVec4d.getCPtr(v), eps);
            return ret;
        }

        public static double GfNormalize(GfVec4d v)
        {
            double ret = UsdCsPINVOKE.GfNormalize__SWIG_17(GfVec4d.getCPtr(v));
            return ret;
        }

        public static GfVec4d GfGetNormalized(GfVec4d v, double eps)
        {
            GfVec4d ret = new GfVec4d(UsdCsPINVOKE.GfGetNormalized__SWIG_16(GfVec4d.getCPtr(v), eps), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4d GfGetNormalized(GfVec4d v)
        {
            GfVec4d ret = new GfVec4d(UsdCsPINVOKE.GfGetNormalized__SWIG_17(GfVec4d.getCPtr(v)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4d GfGetProjection(GfVec4d a, GfVec4d b)
        {
            GfVec4d ret = new GfVec4d(UsdCsPINVOKE.GfGetProjection__SWIG_8(GfVec4d.getCPtr(a), GfVec4d.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec4d GfGetComplement(GfVec4d a, GfVec4d b)
        {
            GfVec4d ret = new GfVec4d(UsdCsPINVOKE.GfGetComplement__SWIG_8(GfVec4d.getCPtr(a), GfVec4d.getCPtr(b)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfIsClose(GfVec4d v1, GfVec4d v2, double tolerance)
        {
            bool ret = UsdCsPINVOKE.GfIsClose__SWIG_14(GfVec4d.getCPtr(v1), GfVec4d.getCPtr(v2), tolerance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfRotation r)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_25(GfRotation.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfQuaternion q)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_26(GfQuaternion.getCPtr(q));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfQuaternion GfSlerp(double alpha, GfQuaternion q0, GfQuaternion q1)
        {
            GfQuaternion ret = new GfQuaternion(UsdCsPINVOKE.GfSlerp__SWIG_3(alpha, GfQuaternion.getCPtr(q0), GfQuaternion.getCPtr(q1)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfQuaternion GfSlerp(GfQuaternion q0, GfQuaternion q1, double alpha)
        {
            GfQuaternion ret = new GfQuaternion(UsdCsPINVOKE.GfSlerp__SWIG_4(GfQuaternion.getCPtr(q0), GfQuaternion.getCPtr(q1), alpha), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static float GfDot(GfQuatf q1, GfQuatf q2)
        {
            float ret = UsdCsPINVOKE.GfDot__SWIG_12(GfQuatf.getCPtr(q1), GfQuatf.getCPtr(q2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfQuatf q)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_27(GfQuatf.getCPtr(q));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfQuatf GfSlerp(double alpha, GfQuatf q0, GfQuatf q1)
        {
            GfQuatf ret = new GfQuatf(UsdCsPINVOKE.GfSlerp__SWIG_5(alpha, GfQuatf.getCPtr(q0), GfQuatf.getCPtr(q1)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfQuatf GfSlerp(GfQuatf q0, GfQuatf q1, double alpha)
        {
            GfQuatf ret = new GfQuatf(UsdCsPINVOKE.GfSlerp__SWIG_6(GfQuatf.getCPtr(q0), GfQuatf.getCPtr(q1), alpha), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double GfDot(GfQuatd q1, GfQuatd q2)
        {
            double ret = UsdCsPINVOKE.GfDot__SWIG_13(GfQuatd.getCPtr(q1), GfQuatd.getCPtr(q2));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfQuatd q)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_28(GfQuatd.getCPtr(q));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfQuatd GfSlerp(double alpha, GfQuatd q0, GfQuatd q1)
        {
            GfQuatd ret = new GfQuatd(UsdCsPINVOKE.GfSlerp__SWIG_7(alpha, GfQuatd.getCPtr(q0), GfQuatd.getCPtr(q1)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfQuatd GfSlerp(GfQuatd q0, GfQuatd q1, double alpha)
        {
            GfQuatd ret = new GfQuatd(UsdCsPINVOKE.GfSlerp__SWIG_8(GfQuatd.getCPtr(q0), GfQuatd.getCPtr(q1), alpha), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay arg0, GfLine arg1, GfVec3d arg2, GfVec3d arg3, SWIGTYPE_p_double arg4, SWIGTYPE_p_double arg5)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_0(GfRay.getCPtr(arg0), GfLine.getCPtr(arg1), GfVec3d.getCPtr(arg2), GfVec3d.getCPtr(arg3), SWIGTYPE_p_double.getCPtr(arg4), SWIGTYPE_p_double.getCPtr(arg5));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay arg0, GfLineSeg arg1, GfVec3d arg2, GfVec3d arg3, SWIGTYPE_p_double arg4, SWIGTYPE_p_double arg5)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_1(GfRay.getCPtr(arg0), GfLineSeg.getCPtr(arg1), GfVec3d.getCPtr(arg2), GfVec3d.getCPtr(arg3), SWIGTYPE_p_double.getCPtr(arg4), SWIGTYPE_p_double.getCPtr(arg5));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay ray, GfLine line, GfVec3d rayPoint, GfVec3d linePoint, out double rayDistance)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_2(GfRay.getCPtr(ray), GfLine.getCPtr(line), GfVec3d.getCPtr(rayPoint), GfVec3d.getCPtr(linePoint), out rayDistance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay ray, GfLine line, GfVec3d rayPoint, GfVec3d linePoint)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_3(GfRay.getCPtr(ray), GfLine.getCPtr(line), GfVec3d.getCPtr(rayPoint), GfVec3d.getCPtr(linePoint));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay ray, GfLine line, GfVec3d rayPoint)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_4(GfRay.getCPtr(ray), GfLine.getCPtr(line), GfVec3d.getCPtr(rayPoint));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay ray, GfLine line)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_5(GfRay.getCPtr(ray), GfLine.getCPtr(line));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay ray, GfLineSeg seg, GfVec3d rayPoint, GfVec3d segPoint, out double rayDistance)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_6(GfRay.getCPtr(ray), GfLineSeg.getCPtr(seg), GfVec3d.getCPtr(rayPoint), GfVec3d.getCPtr(segPoint), out rayDistance);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay ray, GfLineSeg seg, GfVec3d rayPoint, GfVec3d segPoint)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_7(GfRay.getCPtr(ray), GfLineSeg.getCPtr(seg), GfVec3d.getCPtr(rayPoint), GfVec3d.getCPtr(segPoint));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay ray, GfLineSeg seg, GfVec3d rayPoint)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_8(GfRay.getCPtr(ray), GfLineSeg.getCPtr(seg), GfVec3d.getCPtr(rayPoint));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFindClosestPoints(GfRay ray, GfLineSeg seg)
        {
            bool ret = UsdCsPINVOKE.GfFindClosestPoints__SWIG_9(GfRay.getCPtr(ray), GfLineSeg.getCPtr(seg));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool GfFitPlaneToPoints(GfVec3dVector points, GfPlane fitPlane)
        {
            bool ret = UsdCsPINVOKE.GfFitPlaneToPoints(GfVec3dVector.getCPtr(points), GfPlane.getCPtr(fitPlane));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(GfFrustum f)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_29(GfFrustum.getCPtr(f));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void swap(VtValue lhs, VtValue rhs)
        {
            UsdCsPINVOKE.swap__SWIG_1(VtValue.getCPtr(lhs), VtValue.getCPtr(rhs));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static uint hash_value(VtValue val)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_30(VtValue.getCPtr(val));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static GfHalf VtValueToGfHalf(VtValue value)
        {
            GfHalf ret = new GfHalf(UsdCsPINVOKE.VtValueToGfHalf__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfHalf(VtValue value, GfHalf output)
        {
            UsdCsPINVOKE.VtValueToGfHalf__SWIG_1(VtValue.getCPtr(value), GfHalf.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfMatrix2d VtValueToGfMatrix2d(VtValue value)
        {
            GfMatrix2d ret = new GfMatrix2d(UsdCsPINVOKE.VtValueToGfMatrix2d__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfMatrix2d(VtValue value, GfMatrix2d output)
        {
            UsdCsPINVOKE.VtValueToGfMatrix2d__SWIG_1(VtValue.getCPtr(value), GfMatrix2d.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfMatrix3d VtValueToGfMatrix3d(VtValue value)
        {
            GfMatrix3d ret = new GfMatrix3d(UsdCsPINVOKE.VtValueToGfMatrix3d__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfMatrix3d(VtValue value, GfMatrix3d output)
        {
            UsdCsPINVOKE.VtValueToGfMatrix3d__SWIG_1(VtValue.getCPtr(value), GfMatrix3d.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfMatrix4d VtValueToGfMatrix4d(VtValue value)
        {
            GfMatrix4d ret = new GfMatrix4d(UsdCsPINVOKE.VtValueToGfMatrix4d__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfMatrix4d(VtValue value, GfMatrix4d output)
        {
            UsdCsPINVOKE.VtValueToGfMatrix4d__SWIG_1(VtValue.getCPtr(value), GfMatrix4d.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfQuatd VtValueToGfQuatd(VtValue value)
        {
            GfQuatd ret = new GfQuatd(UsdCsPINVOKE.VtValueToGfQuatd__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfQuatd(VtValue value, GfQuatd output)
        {
            UsdCsPINVOKE.VtValueToGfQuatd__SWIG_1(VtValue.getCPtr(value), GfQuatd.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfQuatf VtValueToGfQuatf(VtValue value)
        {
            GfQuatf ret = new GfQuatf(UsdCsPINVOKE.VtValueToGfQuatf__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfQuatf(VtValue value, GfQuatf output)
        {
            UsdCsPINVOKE.VtValueToGfQuatf__SWIG_1(VtValue.getCPtr(value), GfQuatf.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfQuath VtValueToGfQuath(VtValue value)
        {
            GfQuath ret = new GfQuath(UsdCsPINVOKE.VtValueToGfQuath__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfQuath(VtValue value, GfQuath output)
        {
            UsdCsPINVOKE.VtValueToGfQuath__SWIG_1(VtValue.getCPtr(value), GfQuath.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec2d VtValueToGfVec2d(VtValue value)
        {
            GfVec2d ret = new GfVec2d(UsdCsPINVOKE.VtValueToGfVec2d__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec2d(VtValue value, GfVec2d output)
        {
            UsdCsPINVOKE.VtValueToGfVec2d__SWIG_1(VtValue.getCPtr(value), GfVec2d.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec2f VtValueToGfVec2f(VtValue value)
        {
            GfVec2f ret = new GfVec2f(UsdCsPINVOKE.VtValueToGfVec2f__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec2f(VtValue value, GfVec2f output)
        {
            UsdCsPINVOKE.VtValueToGfVec2f__SWIG_1(VtValue.getCPtr(value), GfVec2f.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec2h VtValueToGfVec2h(VtValue value)
        {
            GfVec2h ret = new GfVec2h(UsdCsPINVOKE.VtValueToGfVec2h__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec2h(VtValue value, GfVec2h output)
        {
            UsdCsPINVOKE.VtValueToGfVec2h__SWIG_1(VtValue.getCPtr(value), GfVec2h.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec2i VtValueToGfVec2i(VtValue value)
        {
            GfVec2i ret = new GfVec2i(UsdCsPINVOKE.VtValueToGfVec2i__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec2i(VtValue value, GfVec2i output)
        {
            UsdCsPINVOKE.VtValueToGfVec2i__SWIG_1(VtValue.getCPtr(value), GfVec2i.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec3d VtValueToGfVec3d(VtValue value)
        {
            GfVec3d ret = new GfVec3d(UsdCsPINVOKE.VtValueToGfVec3d__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec3d(VtValue value, GfVec3d output)
        {
            UsdCsPINVOKE.VtValueToGfVec3d__SWIG_1(VtValue.getCPtr(value), GfVec3d.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec3f VtValueToGfVec3f(VtValue value)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.VtValueToGfVec3f__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec3f(VtValue value, GfVec3f output)
        {
            UsdCsPINVOKE.VtValueToGfVec3f__SWIG_1(VtValue.getCPtr(value), GfVec3f.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec3h VtValueToGfVec3h(VtValue value)
        {
            GfVec3h ret = new GfVec3h(UsdCsPINVOKE.VtValueToGfVec3h__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec3h(VtValue value, GfVec3h output)
        {
            UsdCsPINVOKE.VtValueToGfVec3h__SWIG_1(VtValue.getCPtr(value), GfVec3h.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec3i VtValueToGfVec3i(VtValue value)
        {
            GfVec3i ret = new GfVec3i(UsdCsPINVOKE.VtValueToGfVec3i__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec3i(VtValue value, GfVec3i output)
        {
            UsdCsPINVOKE.VtValueToGfVec3i__SWIG_1(VtValue.getCPtr(value), GfVec3i.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec4d VtValueToGfVec4d(VtValue value)
        {
            GfVec4d ret = new GfVec4d(UsdCsPINVOKE.VtValueToGfVec4d__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec4d(VtValue value, GfVec4d output)
        {
            UsdCsPINVOKE.VtValueToGfVec4d__SWIG_1(VtValue.getCPtr(value), GfVec4d.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec4f VtValueToGfVec4f(VtValue value)
        {
            GfVec4f ret = new GfVec4f(UsdCsPINVOKE.VtValueToGfVec4f__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec4f(VtValue value, GfVec4f output)
        {
            UsdCsPINVOKE.VtValueToGfVec4f__SWIG_1(VtValue.getCPtr(value), GfVec4f.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec4h VtValueToGfVec4h(VtValue value)
        {
            GfVec4h ret = new GfVec4h(UsdCsPINVOKE.VtValueToGfVec4h__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec4h(VtValue value, GfVec4h output)
        {
            UsdCsPINVOKE.VtValueToGfVec4h__SWIG_1(VtValue.getCPtr(value), GfVec4h.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static GfVec4i VtValueToGfVec4i(VtValue value)
        {
            GfVec4i ret = new GfVec4i(UsdCsPINVOKE.VtValueToGfVec4i__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToGfVec4i(VtValue value, GfVec4i output)
        {
            UsdCsPINVOKE.VtValueToGfVec4i__SWIG_1(VtValue.getCPtr(value), GfVec4i.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static SdfAssetPath VtValueToSdfAssetPath(VtValue value)
        {
            SdfAssetPath ret = new SdfAssetPath(UsdCsPINVOKE.VtValueToSdfAssetPath__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToSdfAssetPath(VtValue value, SdfAssetPath output)
        {
            UsdCsPINVOKE.VtValueToSdfAssetPath__SWIG_1(VtValue.getCPtr(value), SdfAssetPath.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static SdfAssetPathArray VtValueToSdfAssetPathArray(VtValue value)
        {
            SdfAssetPathArray ret = new SdfAssetPathArray(UsdCsPINVOKE.VtValueToSdfAssetPathArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToSdfAssetPathArray(VtValue value, SdfAssetPathArray output)
        {
            UsdCsPINVOKE.VtValueToSdfAssetPathArray__SWIG_1(VtValue.getCPtr(value), SdfAssetPathArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static SdfTimeCode VtValueToSdfTimeCode(VtValue value)
        {
            SdfTimeCode ret = new SdfTimeCode(UsdCsPINVOKE.VtValueToSdfTimeCode__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToSdfTimeCode(VtValue value, SdfTimeCode output)
        {
            UsdCsPINVOKE.VtValueToSdfTimeCode__SWIG_1(VtValue.getCPtr(value), SdfTimeCode.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static SdfTimeCodeArray VtValueToSdfTimeCodeArray(VtValue value)
        {
            SdfTimeCodeArray ret = new SdfTimeCodeArray(UsdCsPINVOKE.VtValueToSdfTimeCodeArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToSdfTimeCodeArray(VtValue value, SdfTimeCodeArray output)
        {
            UsdCsPINVOKE.VtValueToSdfTimeCodeArray__SWIG_1(VtValue.getCPtr(value), SdfTimeCodeArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static TfToken VtValueToTfToken(VtValue value)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.VtValueToTfToken__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToTfToken(VtValue value, TfToken output)
        {
            UsdCsPINVOKE.VtValueToTfToken__SWIG_1(VtValue.getCPtr(value), TfToken.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtBoolArray VtValueToVtBoolArray(VtValue value)
        {
            VtBoolArray ret = new VtBoolArray(UsdCsPINVOKE.VtValueToVtBoolArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtBoolArray(VtValue value, VtBoolArray output)
        {
            UsdCsPINVOKE.VtValueToVtBoolArray__SWIG_1(VtValue.getCPtr(value), VtBoolArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtDoubleArray VtValueToVtDoubleArray(VtValue value)
        {
            VtDoubleArray ret = new VtDoubleArray(UsdCsPINVOKE.VtValueToVtDoubleArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtDoubleArray(VtValue value, VtDoubleArray output)
        {
            UsdCsPINVOKE.VtValueToVtDoubleArray__SWIG_1(VtValue.getCPtr(value), VtDoubleArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtFloatArray VtValueToVtFloatArray(VtValue value)
        {
            VtFloatArray ret = new VtFloatArray(UsdCsPINVOKE.VtValueToVtFloatArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtFloatArray(VtValue value, VtFloatArray output)
        {
            UsdCsPINVOKE.VtValueToVtFloatArray__SWIG_1(VtValue.getCPtr(value), VtFloatArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtHalfArray VtValueToVtHalfArray(VtValue value)
        {
            VtHalfArray ret = new VtHalfArray(UsdCsPINVOKE.VtValueToVtHalfArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtHalfArray(VtValue value, VtHalfArray output)
        {
            UsdCsPINVOKE.VtValueToVtHalfArray__SWIG_1(VtValue.getCPtr(value), VtHalfArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtInt64Array VtValueToVtInt64Array(VtValue value)
        {
            VtInt64Array ret = new VtInt64Array(UsdCsPINVOKE.VtValueToVtInt64Array__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtInt64Array(VtValue value, VtInt64Array output)
        {
            UsdCsPINVOKE.VtValueToVtInt64Array__SWIG_1(VtValue.getCPtr(value), VtInt64Array.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtIntArray VtValueToVtIntArray(VtValue value)
        {
            VtIntArray ret = new VtIntArray(UsdCsPINVOKE.VtValueToVtIntArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtIntArray(VtValue value, VtIntArray output)
        {
            UsdCsPINVOKE.VtValueToVtIntArray__SWIG_1(VtValue.getCPtr(value), VtIntArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtMatrix2dArray VtValueToVtMatrix2dArray(VtValue value)
        {
            VtMatrix2dArray ret = new VtMatrix2dArray(UsdCsPINVOKE.VtValueToVtMatrix2dArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtMatrix2dArray(VtValue value, VtMatrix2dArray output)
        {
            UsdCsPINVOKE.VtValueToVtMatrix2dArray__SWIG_1(VtValue.getCPtr(value), VtMatrix2dArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtMatrix3dArray VtValueToVtMatrix3dArray(VtValue value)
        {
            VtMatrix3dArray ret = new VtMatrix3dArray(UsdCsPINVOKE.VtValueToVtMatrix3dArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtMatrix3dArray(VtValue value, VtMatrix3dArray output)
        {
            UsdCsPINVOKE.VtValueToVtMatrix3dArray__SWIG_1(VtValue.getCPtr(value), VtMatrix3dArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtMatrix4dArray VtValueToVtMatrix4dArray(VtValue value)
        {
            VtMatrix4dArray ret = new VtMatrix4dArray(UsdCsPINVOKE.VtValueToVtMatrix4dArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtMatrix4dArray(VtValue value, VtMatrix4dArray output)
        {
            UsdCsPINVOKE.VtValueToVtMatrix4dArray__SWIG_1(VtValue.getCPtr(value), VtMatrix4dArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtQuatdArray VtValueToVtQuatdArray(VtValue value)
        {
            VtQuatdArray ret = new VtQuatdArray(UsdCsPINVOKE.VtValueToVtQuatdArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtQuatdArray(VtValue value, VtQuatdArray output)
        {
            UsdCsPINVOKE.VtValueToVtQuatdArray__SWIG_1(VtValue.getCPtr(value), VtQuatdArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtQuatfArray VtValueToVtQuatfArray(VtValue value)
        {
            VtQuatfArray ret = new VtQuatfArray(UsdCsPINVOKE.VtValueToVtQuatfArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtQuatfArray(VtValue value, VtQuatfArray output)
        {
            UsdCsPINVOKE.VtValueToVtQuatfArray__SWIG_1(VtValue.getCPtr(value), VtQuatfArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtQuathArray VtValueToVtQuathArray(VtValue value)
        {
            VtQuathArray ret = new VtQuathArray(UsdCsPINVOKE.VtValueToVtQuathArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtQuathArray(VtValue value, VtQuathArray output)
        {
            UsdCsPINVOKE.VtValueToVtQuathArray__SWIG_1(VtValue.getCPtr(value), VtQuathArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtStringArray VtValueToVtStringArray(VtValue value)
        {
            VtStringArray ret = new VtStringArray(UsdCsPINVOKE.VtValueToVtStringArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtStringArray(VtValue value, VtStringArray output)
        {
            UsdCsPINVOKE.VtValueToVtStringArray__SWIG_1(VtValue.getCPtr(value), VtStringArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtTokenArray VtValueToVtTokenArray(VtValue value)
        {
            VtTokenArray ret = new VtTokenArray(UsdCsPINVOKE.VtValueToVtTokenArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtTokenArray(VtValue value, VtTokenArray output)
        {
            UsdCsPINVOKE.VtValueToVtTokenArray__SWIG_1(VtValue.getCPtr(value), VtTokenArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtUCharArray VtValueToVtUCharArray(VtValue value)
        {
            VtUCharArray ret = new VtUCharArray(UsdCsPINVOKE.VtValueToVtUCharArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtUCharArray(VtValue value, VtUCharArray output)
        {
            UsdCsPINVOKE.VtValueToVtUCharArray__SWIG_1(VtValue.getCPtr(value), VtUCharArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtUInt64Array VtValueToVtUInt64Array(VtValue value)
        {
            VtUInt64Array ret = new VtUInt64Array(UsdCsPINVOKE.VtValueToVtUInt64Array__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtUInt64Array(VtValue value, VtUInt64Array output)
        {
            UsdCsPINVOKE.VtValueToVtUInt64Array__SWIG_1(VtValue.getCPtr(value), VtUInt64Array.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtUIntArray VtValueToVtUIntArray(VtValue value)
        {
            VtUIntArray ret = new VtUIntArray(UsdCsPINVOKE.VtValueToVtUIntArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtUIntArray(VtValue value, VtUIntArray output)
        {
            UsdCsPINVOKE.VtValueToVtUIntArray__SWIG_1(VtValue.getCPtr(value), VtUIntArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec2dArray VtValueToVtVec2dArray(VtValue value)
        {
            VtVec2dArray ret = new VtVec2dArray(UsdCsPINVOKE.VtValueToVtVec2dArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec2dArray(VtValue value, VtVec2dArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec2dArray__SWIG_1(VtValue.getCPtr(value), VtVec2dArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec2fArray VtValueToVtVec2fArray(VtValue value)
        {
            VtVec2fArray ret = new VtVec2fArray(UsdCsPINVOKE.VtValueToVtVec2fArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec2fArray(VtValue value, VtVec2fArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec2fArray__SWIG_1(VtValue.getCPtr(value), VtVec2fArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec2hArray VtValueToVtVec2hArray(VtValue value)
        {
            VtVec2hArray ret = new VtVec2hArray(UsdCsPINVOKE.VtValueToVtVec2hArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec2hArray(VtValue value, VtVec2hArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec2hArray__SWIG_1(VtValue.getCPtr(value), VtVec2hArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec2iArray VtValueToVtVec2iArray(VtValue value)
        {
            VtVec2iArray ret = new VtVec2iArray(UsdCsPINVOKE.VtValueToVtVec2iArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec2iArray(VtValue value, VtVec2iArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec2iArray__SWIG_1(VtValue.getCPtr(value), VtVec2iArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec3dArray VtValueToVtVec3dArray(VtValue value)
        {
            VtVec3dArray ret = new VtVec3dArray(UsdCsPINVOKE.VtValueToVtVec3dArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec3dArray(VtValue value, VtVec3dArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec3dArray__SWIG_1(VtValue.getCPtr(value), VtVec3dArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec3fArray VtValueToVtVec3fArray(VtValue value)
        {
            VtVec3fArray ret = new VtVec3fArray(UsdCsPINVOKE.VtValueToVtVec3fArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec3fArray(VtValue value, VtVec3fArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec3fArray__SWIG_1(VtValue.getCPtr(value), VtVec3fArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec3hArray VtValueToVtVec3hArray(VtValue value)
        {
            VtVec3hArray ret = new VtVec3hArray(UsdCsPINVOKE.VtValueToVtVec3hArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec3hArray(VtValue value, VtVec3hArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec3hArray__SWIG_1(VtValue.getCPtr(value), VtVec3hArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec3iArray VtValueToVtVec3iArray(VtValue value)
        {
            VtVec3iArray ret = new VtVec3iArray(UsdCsPINVOKE.VtValueToVtVec3iArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec3iArray(VtValue value, VtVec3iArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec3iArray__SWIG_1(VtValue.getCPtr(value), VtVec3iArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec4dArray VtValueToVtVec4dArray(VtValue value)
        {
            VtVec4dArray ret = new VtVec4dArray(UsdCsPINVOKE.VtValueToVtVec4dArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec4dArray(VtValue value, VtVec4dArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec4dArray__SWIG_1(VtValue.getCPtr(value), VtVec4dArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec4fArray VtValueToVtVec4fArray(VtValue value)
        {
            VtVec4fArray ret = new VtVec4fArray(UsdCsPINVOKE.VtValueToVtVec4fArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec4fArray(VtValue value, VtVec4fArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec4fArray__SWIG_1(VtValue.getCPtr(value), VtVec4fArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec4hArray VtValueToVtVec4hArray(VtValue value)
        {
            VtVec4hArray ret = new VtVec4hArray(UsdCsPINVOKE.VtValueToVtVec4hArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec4hArray(VtValue value, VtVec4hArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec4hArray__SWIG_1(VtValue.getCPtr(value), VtVec4hArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static VtVec4iArray VtValueToVtVec4iArray(VtValue value)
        {
            VtVec4iArray ret = new VtVec4iArray(UsdCsPINVOKE.VtValueToVtVec4iArray__SWIG_0(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToVtVec4iArray(VtValue value, VtVec4iArray output)
        {
            UsdCsPINVOKE.VtValueToVtVec4iArray__SWIG_1(VtValue.getCPtr(value), VtVec4iArray.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static bool VtValueTobool(VtValue value)
        {
            bool ret = UsdCsPINVOKE.VtValueTobool__SWIG_0(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueTobool(VtValue value, ref bool output)
        {
            UsdCsPINVOKE.VtValueTobool__SWIG_1(VtValue.getCPtr(value), ref output);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static double VtValueTodouble(VtValue value)
        {
            double ret = UsdCsPINVOKE.VtValueTodouble__SWIG_0(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueTodouble(VtValue value, ref double output)
        {
            UsdCsPINVOKE.VtValueTodouble__SWIG_1(VtValue.getCPtr(value), ref output);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static float VtValueTofloat(VtValue value)
        {
            float ret = UsdCsPINVOKE.VtValueTofloat__SWIG_0(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueTofloat(VtValue value, ref float output)
        {
            UsdCsPINVOKE.VtValueTofloat__SWIG_1(VtValue.getCPtr(value), ref output);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static int VtValueToint(VtValue value)
        {
            int ret = UsdCsPINVOKE.VtValueToint__SWIG_0(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToint(VtValue value, ref int output)
        {
            UsdCsPINVOKE.VtValueToint__SWIG_1(VtValue.getCPtr(value), ref output);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static long VtValueTolong(VtValue value)
        {
            long ret = UsdCsPINVOKE.VtValueTolong__SWIG_0(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueTolong(VtValue value, ref long output)
        {
            UsdCsPINVOKE.VtValueTolong__SWIG_1(VtValue.getCPtr(value), ref output);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static string VtValueTostring(VtValue value)
        {
            string ret = UsdCsPINVOKE.VtValueTostring__SWIG_0(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueTostring(VtValue value, SWIGTYPE_p_std__string output)
        {
            UsdCsPINVOKE.VtValueTostring__SWIG_1(VtValue.getCPtr(value), SWIGTYPE_p_std__string.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static ulong VtValueToulong(VtValue value)
        {
            ulong ret = UsdCsPINVOKE.VtValueToulong__SWIG_0(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueToulong(VtValue value, ref ulong output)
        {
            UsdCsPINVOKE.VtValueToulong__SWIG_1(VtValue.getCPtr(value), ref output);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static byte VtValueTobyte(VtValue value)
        {
            byte ret = UsdCsPINVOKE.VtValueTobyte__SWIG_0(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueTobyte(VtValue value, ref byte output)
        {
            UsdCsPINVOKE.VtValueTobyte__SWIG_1(VtValue.getCPtr(value), ref output);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        [Preserve]
        public static uint VtValueTouint(VtValue value)
        {
            uint ret = UsdCsPINVOKE.VtValueTouint__SWIG_0(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        [Preserve]
        public static void VtValueTouint(VtValue value, ref uint output)
        {
            UsdCsPINVOKE.VtValueTouint__SWIG_1(VtValue.getCPtr(value), ref output);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void swap(VtDictionary lhs, VtDictionary rhs)
        {
            UsdCsPINVOKE.swap__SWIG_2(VtDictionary.getCPtr(lhs), VtDictionary.getCPtr(rhs));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static uint hash_value(VtDictionary dict)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_32(VtDictionary.getCPtr(dict));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static VtDictionary VtGetEmptyDictionary()
        {
            VtDictionary ret = new VtDictionary(UsdCsPINVOKE.VtGetEmptyDictionary(), false);
            return ret;
        }

        public static VtDictionary VtDictionaryOver(VtDictionary strong, VtDictionary weak, bool coerceToWeakerOpinionType)
        {
            VtDictionary ret = new VtDictionary(UsdCsPINVOKE.VtDictionaryOver__SWIG_0(VtDictionary.getCPtr(strong), VtDictionary.getCPtr(weak), coerceToWeakerOpinionType), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static VtDictionary VtDictionaryOver(VtDictionary strong, VtDictionary weak)
        {
            VtDictionary ret = new VtDictionary(UsdCsPINVOKE.VtDictionaryOver__SWIG_1(VtDictionary.getCPtr(strong), VtDictionary.getCPtr(weak)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static VtDictionary VtDictionaryOverRecursive(VtDictionary strong, VtDictionary weak, bool coerceToWeakerOpinionType)
        {
            VtDictionary ret = new VtDictionary(UsdCsPINVOKE.VtDictionaryOverRecursive__SWIG_0(VtDictionary.getCPtr(strong), VtDictionary.getCPtr(weak), coerceToWeakerOpinionType), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static VtDictionary VtDictionaryOverRecursive(VtDictionary strong, VtDictionary weak)
        {
            VtDictionary ret = new VtDictionary(UsdCsPINVOKE.VtDictionaryOverRecursive__SWIG_1(VtDictionary.getCPtr(strong), VtDictionary.getCPtr(weak)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(ArResolverContext context)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_33(ArResolverContext.getCPtr(context));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string NdrGetIdentifierString(TfToken id)
        {
            string ret = UsdCsPINVOKE.NdrGetIdentifierString(TfToken.getCPtr(id));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static NdrNodeDiscoveryResultVector NdrFsHelpersDiscoverNodes(StdStringVector searchPaths, StdStringVector allowedExtensions, bool followSymlinks, NdrDiscoveryPluginContext context)
        {
            NdrNodeDiscoveryResultVector ret = new NdrNodeDiscoveryResultVector(UsdCsPINVOKE.NdrFsHelpersDiscoverNodes__SWIG_0(StdStringVector.getCPtr(searchPaths), StdStringVector.getCPtr(allowedExtensions), followSymlinks, NdrDiscoveryPluginContext.getCPtr(context)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static NdrNodeDiscoveryResultVector NdrFsHelpersDiscoverNodes(StdStringVector searchPaths, StdStringVector allowedExtensions, bool followSymlinks)
        {
            NdrNodeDiscoveryResultVector ret = new NdrNodeDiscoveryResultVector(UsdCsPINVOKE.NdrFsHelpersDiscoverNodes__SWIG_1(StdStringVector.getCPtr(searchPaths), StdStringVector.getCPtr(allowedExtensions), followSymlinks), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static NdrNodeDiscoveryResultVector NdrFsHelpersDiscoverNodes(StdStringVector searchPaths, StdStringVector allowedExtensions)
        {
            NdrNodeDiscoveryResultVector ret = new NdrNodeDiscoveryResultVector(UsdCsPINVOKE.NdrFsHelpersDiscoverNodes__SWIG_2(StdStringVector.getCPtr(searchPaths), StdStringVector.getCPtr(allowedExtensions)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool SdfIsDefiningSpecifier(SdfSpecifier spec)
        {
            bool ret = UsdCsPINVOKE.SdfIsDefiningSpecifier((int)spec);
            return ret;
        }

        public static SWIGTYPE_p_TfEnum SdfDefaultUnit(TfToken typeName)
        {
            SWIGTYPE_p_TfEnum ret = new SWIGTYPE_p_TfEnum(UsdCsPINVOKE.SdfDefaultUnit__SWIG_0(TfToken.getCPtr(typeName)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_TfEnum SdfDefaultUnit(SWIGTYPE_p_TfEnum unit)
        {
            SWIGTYPE_p_TfEnum ret = new SWIGTYPE_p_TfEnum(UsdCsPINVOKE.SdfDefaultUnit__SWIG_1(SWIGTYPE_p_TfEnum.getCPtr(unit)), false);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string SdfUnitCategory(SWIGTYPE_p_TfEnum unit)
        {
            string ret = UsdCsPINVOKE.SdfUnitCategory(SWIGTYPE_p_TfEnum.getCPtr(unit));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static double SdfConvertUnit(SWIGTYPE_p_TfEnum fromUnit, SWIGTYPE_p_TfEnum toUnit)
        {
            double ret = UsdCsPINVOKE.SdfConvertUnit(SWIGTYPE_p_TfEnum.getCPtr(fromUnit), SWIGTYPE_p_TfEnum.getCPtr(toUnit));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string SdfGetNameForUnit(SWIGTYPE_p_TfEnum unit)
        {
            string ret = UsdCsPINVOKE.SdfGetNameForUnit(SWIGTYPE_p_TfEnum.getCPtr(unit));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_TfEnum SdfGetUnitFromName(string name)
        {
            SWIGTYPE_p_TfEnum ret = new SWIGTYPE_p_TfEnum(UsdCsPINVOKE.SdfGetUnitFromName(name), false);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool SdfValueHasValidType(VtValue value)
        {
            bool ret = UsdCsPINVOKE.SdfValueHasValidType(VtValue.getCPtr(value));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfType SdfGetTypeForValueTypeName(TfToken name)
        {
            TfType ret = new TfType(UsdCsPINVOKE.SdfGetTypeForValueTypeName(TfToken.getCPtr(name)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeNameForValue(VtValue value)
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeNameForValue(VtValue.getCPtr(value)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfToken SdfGetRoleNameForValueTypeName(TfToken typeName)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.SdfGetRoleNameForValueTypeName(TfToken.getCPtr(typeName)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool SdfConvertToValidMetadataDictionary(VtDictionary dict, SWIGTYPE_p_std__string errMsg)
        {
            bool ret = UsdCsPINVOKE.SdfConvertToValidMetadataDictionary(VtDictionary.getCPtr(dict), SWIGTYPE_p_std__string.getCPtr(errMsg));
            return ret;
        }

        public static SWIGTYPE_p_std__ostream VtStreamOut(SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t arg0, SWIGTYPE_p_std__ostream arg1)
        {
            SWIGTYPE_p_std__ostream ret = new SWIGTYPE_p_std__ostream(UsdCsPINVOKE.VtStreamOut(SWIGTYPE_p_std__mapT_std__string_std__string_std__lessT_std__string_t_t.getCPtr(arg0), SWIGTYPE_p_std__ostream.getCPtr(arg1)), false);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfUnregisteredValue uv)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_34(SdfUnregisteredValue.getCPtr(uv));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfValueBlock block)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_35(SdfValueBlock.getCPtr(block));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfHumanReadableValue hrval)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_36(SdfHumanReadableValue.getCPtr(hrval));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfIntListOp op)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_38(SdfIntListOp.getCPtr(op));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfUIntListOp op)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_39(SdfUIntListOp.getCPtr(op));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfInt64ListOp op)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_40(SdfInt64ListOp.getCPtr(op));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfUInt64ListOp op)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_41(SdfUInt64ListOp.getCPtr(op));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfTokenListOp op)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_42(SdfTokenListOp.getCPtr(op));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfStringListOp op)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_43(SdfStringListOp.getCPtr(op));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfPathListOp op)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_44(SdfPathListOp.getCPtr(op));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfReferenceListOp op)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_45(SdfReferenceListOp.getCPtr(op));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfUnregisteredValueListOp op)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_46(SdfUnregisteredValueListOp.getCPtr(op));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfValueTypeName typeName)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_47(SdfValueTypeName.getCPtr(typeName));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeBool()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeBool(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeUChar()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeUChar(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeInt()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeInt(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeUInt()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeUInt(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeInt64()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeInt64(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeUInt64()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeUInt64(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeHalf()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeHalf(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFloat()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFloat(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeDouble()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeDouble(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTimeCode()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTimeCode(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeString()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeString(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeToken()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeToken(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeAsset()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeAsset(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeInt2()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeInt2(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeInt3()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeInt3(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeInt4()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeInt4(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeHalf2()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeHalf2(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeHalf3()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeHalf3(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeHalf4()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeHalf4(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFloat2()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFloat2(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFloat3()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFloat3(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFloat4()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFloat4(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeDouble2()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeDouble2(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeDouble3()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeDouble3(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeDouble4()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeDouble4(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypePoint3h()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypePoint3h(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypePoint3f()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypePoint3f(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypePoint3d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypePoint3d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeVector3h()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeVector3h(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeVector3f()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeVector3f(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeVector3d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeVector3d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeNormal3h()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeNormal3h(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeNormal3f()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeNormal3f(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeNormal3d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeNormal3d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor3h()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor3h(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor3f()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor3f(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor3d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor3d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor4h()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor4h(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor4f()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor4f(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor4d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor4d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeQuath()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeQuath(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeQuatf()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeQuatf(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeQuatd()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeQuatd(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeMatrix2d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeMatrix2d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeMatrix3d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeMatrix3d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeMatrix4d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeMatrix4d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFrame4d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFrame4d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord2h()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord2h(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord2f()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord2f(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord2d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord2d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord3h()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord3h(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord3f()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord3f(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord3d()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord3d(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeBoolArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeBoolArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeUCharArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeUCharArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeIntArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeIntArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeUIntArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeUIntArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeInt64Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeInt64Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeUInt64Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeUInt64Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeHalfArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeHalfArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFloatArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFloatArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeDoubleArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeDoubleArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTimeCodeArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTimeCodeArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeStringArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeStringArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTokenArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTokenArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeAssetArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeAssetArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeInt2Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeInt2Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeInt3Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeInt3Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeInt4Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeInt4Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeHalf2Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeHalf2Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeHalf3Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeHalf3Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeHalf4Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeHalf4Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFloat2Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFloat2Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFloat3Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFloat3Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFloat4Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFloat4Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeDouble2Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeDouble2Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeDouble3Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeDouble3Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeDouble4Array()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeDouble4Array(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypePoint3hArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypePoint3hArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypePoint3fArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypePoint3fArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypePoint3dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypePoint3dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeVector3hArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeVector3hArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeVector3fArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeVector3fArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeVector3dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeVector3dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeNormal3hArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeNormal3hArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeNormal3fArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeNormal3fArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeNormal3dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeNormal3dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor3hArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor3hArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor3fArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor3fArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor3dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor3dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor4hArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor4hArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor4fArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor4fArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeColor4dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeColor4dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeQuathArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeQuathArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeQuatfArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeQuatfArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeQuatdArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeQuatdArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeMatrix2dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeMatrix2dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeMatrix3dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeMatrix3dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeMatrix4dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeMatrix4dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeFrame4dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeFrame4dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord2hArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord2hArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord2fArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord2fArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord2dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord2dArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord3hArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord3hArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord3fArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord3fArray(), true);
            return ret;
        }

        public static SdfValueTypeName SdfGetValueTypeTexCoord3dArray()
        {
            SdfValueTypeName ret = new SdfValueTypeName(UsdCsPINVOKE.SdfGetValueTypeTexCoord3dArray(), true);
            return ret;
        }

        public static uint hash_value(SdfAssetPath ap)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_48(SdfAssetPath.getCPtr(ap));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void swap(SdfAssetPath lhs, SdfAssetPath rhs)
        {
            UsdCsPINVOKE.swap__SWIG_3(SdfAssetPath.getCPtr(lhs), SdfAssetPath.getCPtr(rhs));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void GetPathFromVector(SdfPathVector paths, int index, SdfPath output)
        {
            UsdCsPINVOKE.GetPathFromVector(SdfPathVector.getCPtr(paths), index, SdfPath.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void intrusive_ptr_add_ref(SWIGTYPE_p_Sdf_PathNode arg0)
        {
            UsdCsPINVOKE.intrusive_ptr_add_ref(SWIGTYPE_p_Sdf_PathNode.getCPtr(arg0));
        }

        public static void intrusive_ptr_release(SWIGTYPE_p_Sdf_PathNode arg0)
        {
            UsdCsPINVOKE.intrusive_ptr_release(SWIGTYPE_p_Sdf_PathNode.getCPtr(arg0));
        }

        public static uint Sdf_SizeofPrimPathNode
        {
            get
            {
                uint ret = UsdCsPINVOKE.Sdf_SizeofPrimPathNode_get();
                return ret;
            }
        }

        public static uint Sdf_SizeofPropPathNode
        {
            get
            {
                uint ret = UsdCsPINVOKE.Sdf_SizeofPropPathNode_get();
                return ret;
            }
        }

        public static void swap(SdfPath lhs, SdfPath rhs)
        {
            UsdCsPINVOKE.swap__SWIG_4(SdfPath.getCPtr(lhs), SdfPath.getCPtr(rhs));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static uint hash_value(SdfPath path)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_49(SdfPath.getCPtr(path));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_std__setT_SdfPath_t__const_iterator SdfPathFindLongestPrefix(SWIGTYPE_p_std__setT_SdfPath_t set, SdfPath path)
        {
            SWIGTYPE_p_std__setT_SdfPath_t__const_iterator ret = new SWIGTYPE_p_std__setT_SdfPath_t__const_iterator(UsdCsPINVOKE.SdfPathFindLongestPrefix(SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(set), SdfPath.getCPtr(path)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_std__setT_SdfPath_t__const_iterator SdfPathFindLongestStrictPrefix(SWIGTYPE_p_std__setT_SdfPath_t set, SdfPath path)
        {
            SWIGTYPE_p_std__setT_SdfPath_t__const_iterator ret = new SWIGTYPE_p_std__setT_SdfPath_t__const_iterator(UsdCsPINVOKE.SdfPathFindLongestStrictPrefix(SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(set), SdfPath.getCPtr(path)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfLayerOffset offset)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_50(SdfLayerOffset.getCPtr(offset));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfPayload p)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_51(SdfPayload.getCPtr(p));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfReference r)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_52(SdfReference.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static int SdfFindReferenceByIdentity(StdReferenceVector references, SdfReference referenceId)
        {
            int ret = UsdCsPINVOKE.SdfFindReferenceByIdentity(StdReferenceVector.getCPtr(references), SdfReference.getCPtr(referenceId));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SdfNamespaceEditDetail.Result CombineResult(SdfNamespaceEditDetail.Result lhs, SdfNamespaceEditDetail.Result rhs)
        {
            SdfNamespaceEditDetail.Result ret = (SdfNamespaceEditDetail.Result)UsdCsPINVOKE.CombineResult((int)lhs, (int)rhs);
            return ret;
        }

        public static SdfNamespaceEditDetail.Result CombineError(SdfNamespaceEditDetail.Result arg0)
        {
            SdfNamespaceEditDetail.Result ret = (SdfNamespaceEditDetail.Result)UsdCsPINVOKE.CombineError((int)arg0);
            return ret;
        }

        public static SdfNamespaceEditDetail.Result CombineUnbatched(SdfNamespaceEditDetail.Result other)
        {
            SdfNamespaceEditDetail.Result ret = (SdfNamespaceEditDetail.Result)UsdCsPINVOKE.CombineUnbatched((int)other);
            return ret;
        }

        public static uint hash_value(SdfSpec x)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_53(SdfSpec.getCPtr(x));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SdfPrimSpecHandle SdfCreatePrimInLayer(SdfLayerHandle layer, SdfPath primPath)
        {
            SdfPrimSpecHandle ret = new SdfPrimSpecHandle(UsdCsPINVOKE.SdfCreatePrimInLayer(SdfLayerHandle.getCPtr(layer), SdfPath.getCPtr(primPath)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool SdfJustCreatePrimInLayer(SdfLayerHandle layer, SdfPath primPath)
        {
            bool ret = UsdCsPINVOKE.SdfJustCreatePrimInLayer(SdfLayerHandle.getCPtr(layer), SdfPath.getCPtr(primPath));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool SdfJustCreatePrimAttributeInLayer(SdfLayerHandle layer, SdfPath attrPath, SdfValueTypeName typeName, SdfVariability variability, bool isCustom)
        {
            bool ret = UsdCsPINVOKE.SdfJustCreatePrimAttributeInLayer__SWIG_0(SdfLayerHandle.getCPtr(layer), SdfPath.getCPtr(attrPath), SdfValueTypeName.getCPtr(typeName), (int)variability, isCustom);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool SdfJustCreatePrimAttributeInLayer(SdfLayerHandle layer, SdfPath attrPath, SdfValueTypeName typeName, SdfVariability variability)
        {
            bool ret = UsdCsPINVOKE.SdfJustCreatePrimAttributeInLayer__SWIG_1(SdfLayerHandle.getCPtr(layer), SdfPath.getCPtr(attrPath), SdfValueTypeName.getCPtr(typeName), (int)variability);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool SdfJustCreatePrimAttributeInLayer(SdfLayerHandle layer, SdfPath attrPath, SdfValueTypeName typeName)
        {
            bool ret = UsdCsPINVOKE.SdfJustCreatePrimAttributeInLayer__SWIG_2(SdfLayerHandle.getCPtr(layer), SdfPath.getCPtr(attrPath), SdfValueTypeName.getCPtr(typeName));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(SdfTimeCode ap)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_54(SdfTimeCode.getCPtr(ap));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void swap(SdfTimeCode lhs, SdfTimeCode rhs)
        {
            UsdCsPINVOKE.swap__SWIG_5(SdfTimeCode.getCPtr(lhs), SdfTimeCode.getCPtr(rhs));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static bool IsTruthy(TfToken propName, SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata)
        {
            bool ret = UsdCsPINVOKE.IsTruthy(TfToken.getCPtr(propName), SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string StringVal(TfToken propName, SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata)
        {
            string ret = UsdCsPINVOKE.StringVal__SWIG_0(TfToken.getCPtr(propName), SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string StringVal(TfToken propName, SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata, string defaultValue)
        {
            string ret = UsdCsPINVOKE.StringVal__SWIG_1(TfToken.getCPtr(propName), SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata), defaultValue);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfToken TokenVal(TfToken propName, SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata, TfToken defaultValue)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.TokenVal__SWIG_0(TfToken.getCPtr(propName), SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata), TfToken.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfToken TokenVal(TfToken propName, SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.TokenVal__SWIG_1(TfToken.getCPtr(propName), SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static StdStringVector StringVecVal(TfToken propName, SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata)
        {
            StdStringVector ret = new StdStringVector(UsdCsPINVOKE.StringVecVal(TfToken.getCPtr(propName), SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfTokenVector TokenVecVal(TfToken propName, SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata)
        {
            TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.TokenVecVal(TfToken.getCPtr(propName), SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_std__vectorT_std__pairT_TfToken_TfToken_t_t OptionVecVal(string optionStr)
        {
            SWIGTYPE_p_std__vectorT_std__pairT_TfToken_TfToken_t_t ret = new SWIGTYPE_p_std__vectorT_std__pairT_TfToken_TfToken_t_t(UsdCsPINVOKE.OptionVecVal(optionStr), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string CreateStringFromStringVec(StdStringVector stringVec)
        {
            string ret = UsdCsPINVOKE.CreateStringFromStringVec(StdStringVector.getCPtr(stringVec));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool IsPropertyAnAssetIdentifier(SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata)
        {
            bool ret = UsdCsPINVOKE.IsPropertyAnAssetIdentifier(SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool IsPropertyATerminal(SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata)
        {
            bool ret = UsdCsPINVOKE.IsPropertyATerminal(SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfToken GetRoleFromMetadata(SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t metadata)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.GetRoleFromMetadata(SWIGTYPE_p_std__unordered_mapT_TfToken_std__string_TfToken__HashFunctor_t.getCPtr(metadata)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool PcpIsTimeScalingForLayerTimeCodesPerSecondDisabled()
        {
            bool ret = UsdCsPINVOKE.PcpIsTimeScalingForLayerTimeCodesPerSecondDisabled();
            return ret;
        }

        public static uint hash_value(PcpLayerStackIdentifier x)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_55(PcpLayerStackIdentifier.getCPtr(x));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(PcpLayerStackIdentifierStr x)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_56(PcpLayerStackIdentifierStr.getCPtr(x));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_std__ostream PcpIdentifierFormatBaseName(SWIGTYPE_p_std__ostream arg0)
        {
            SWIGTYPE_p_std__ostream ret = new SWIGTYPE_p_std__ostream(UsdCsPINVOKE.PcpIdentifierFormatBaseName(SWIGTYPE_p_std__ostream.getCPtr(arg0)), false);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_std__ostream PcpIdentifierFormatRealPath(SWIGTYPE_p_std__ostream arg0)
        {
            SWIGTYPE_p_std__ostream ret = new SWIGTYPE_p_std__ostream(UsdCsPINVOKE.PcpIdentifierFormatRealPath(SWIGTYPE_p_std__ostream.getCPtr(arg0)), false);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_std__ostream PcpIdentifierFormatIdentifier(SWIGTYPE_p_std__ostream arg0)
        {
            SWIGTYPE_p_std__ostream ret = new SWIGTYPE_p_std__ostream(UsdCsPINVOKE.PcpIdentifierFormatIdentifier(SWIGTYPE_p_std__ostream.getCPtr(arg0)), false);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(PcpNodeRef x)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_57(PcpNodeRef.getCPtr(x));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void swap(PcpPrimIndex l, PcpPrimIndex r)
        {
            UsdCsPINVOKE.swap__SWIG_6(PcpPrimIndex.getCPtr(l), PcpPrimIndex.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void swap(SWIGTYPE_p_PcpPrimIndexOutputs l, SWIGTYPE_p_PcpPrimIndexOutputs r)
        {
            UsdCsPINVOKE.swap__SWIG_7(SWIGTYPE_p_PcpPrimIndexOutputs.getCPtr(l), SWIGTYPE_p_PcpPrimIndexOutputs.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void PcpComputePrimIndex(SdfPath primPath, PcpLayerStackPtr layerStack, SWIGTYPE_p_PcpPrimIndexInputs inputs, SWIGTYPE_p_PcpPrimIndexOutputs outputs, SWIGTYPE_p_ArResolver pathResolver)
        {
            UsdCsPINVOKE.PcpComputePrimIndex__SWIG_0(SdfPath.getCPtr(primPath), PcpLayerStackPtr.getCPtr(layerStack), SWIGTYPE_p_PcpPrimIndexInputs.getCPtr(inputs), SWIGTYPE_p_PcpPrimIndexOutputs.getCPtr(outputs), SWIGTYPE_p_ArResolver.getCPtr(pathResolver));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void PcpComputePrimIndex(SdfPath primPath, PcpLayerStackPtr layerStack, SWIGTYPE_p_PcpPrimIndexInputs inputs, SWIGTYPE_p_PcpPrimIndexOutputs outputs)
        {
            UsdCsPINVOKE.PcpComputePrimIndex__SWIG_1(SdfPath.getCPtr(primPath), PcpLayerStackPtr.getCPtr(layerStack), SWIGTYPE_p_PcpPrimIndexInputs.getCPtr(inputs), SWIGTYPE_p_PcpPrimIndexOutputs.getCPtr(outputs));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static bool PcpIsNewDefaultStandinBehaviorEnabled()
        {
            bool ret = UsdCsPINVOKE.PcpIsNewDefaultStandinBehaviorEnabled();
            return ret;
        }

        public static void PcpBuildPropertyIndex(SdfPath propertyPath, PcpCache cache, PcpPropertyIndex propertyIndex, SWIGTYPE_p_PcpErrorVector allErrors)
        {
            UsdCsPINVOKE.PcpBuildPropertyIndex(SdfPath.getCPtr(propertyPath), PcpCache.getCPtr(cache), PcpPropertyIndex.getCPtr(propertyIndex), SWIGTYPE_p_PcpErrorVector.getCPtr(allErrors));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void PcpBuildPrimPropertyIndex(SdfPath propertyPath, PcpCache cache, PcpPrimIndex owningPrimIndex, PcpPropertyIndex propertyIndex, SWIGTYPE_p_PcpErrorVector allErrors)
        {
            UsdCsPINVOKE.PcpBuildPrimPropertyIndex(SdfPath.getCPtr(propertyPath), PcpCache.getCPtr(cache), PcpPrimIndex.getCPtr(owningPrimIndex), PcpPropertyIndex.getCPtr(propertyIndex), SWIGTYPE_p_PcpErrorVector.getCPtr(allErrors));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static bool PcpIsInheritArc(PcpArcType arcType)
        {
            bool ret = UsdCsPINVOKE.PcpIsInheritArc((int)arcType);
            return ret;
        }

        public static bool PcpIsSpecializeArc(PcpArcType arcType)
        {
            bool ret = UsdCsPINVOKE.PcpIsSpecializeArc((int)arcType);
            return ret;
        }

        public static bool PcpIsClassBasedArc(PcpArcType arcType)
        {
            bool ret = UsdCsPINVOKE.PcpIsClassBasedArc((int)arcType);
            return ret;
        }

        public static uint PCP_INVALID_INDEX
        {
            get
            {
                uint ret = UsdCsPINVOKE.PCP_INVALID_INDEX_get();
                return ret;
            }
        }

        public static string UsdDescribe(UsdObject arg0)
        {
            string ret = UsdCsPINVOKE.UsdDescribe__SWIG_0(UsdObject.getCPtr(arg0));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string UsdDescribe(UsdStageWeakPtr arg0)
        {
            string ret = UsdCsPINVOKE.UsdDescribe__SWIG_1(UsdStageWeakPtr.getCPtr(arg0));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string UsdDescribe(UsdStage arg0)
        {
            string ret = UsdCsPINVOKE.UsdDescribe__SWIG_2(UsdStage.getCPtr(arg0));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string UsdDescribe(UsdStageCache arg0)
        {
            string ret = UsdCsPINVOKE.UsdDescribe__SWIG_4(UsdStageCache.getCPtr(arg0));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(UsdTimeCode time)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_58(UsdTimeCode.getCPtr(time));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(Usd_PrimFlagsPredicate p)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_59(Usd_PrimFlagsPredicate.getCPtr(p));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static Usd_PrimFlags UsdPrimIsActive
        {
            get
            {
                Usd_PrimFlags ret = (Usd_PrimFlags)UsdCsPINVOKE.UsdPrimIsActive_get();
                return ret;
            }
        }

        public static Usd_PrimFlags UsdPrimIsLoaded
        {
            get
            {
                Usd_PrimFlags ret = (Usd_PrimFlags)UsdCsPINVOKE.UsdPrimIsLoaded_get();
                return ret;
            }
        }

        public static Usd_PrimFlags UsdPrimIsModel
        {
            get
            {
                Usd_PrimFlags ret = (Usd_PrimFlags)UsdCsPINVOKE.UsdPrimIsModel_get();
                return ret;
            }
        }

        public static Usd_PrimFlags UsdPrimIsGroup
        {
            get
            {
                Usd_PrimFlags ret = (Usd_PrimFlags)UsdCsPINVOKE.UsdPrimIsGroup_get();
                return ret;
            }
        }

        public static Usd_PrimFlags UsdPrimIsAbstract
        {
            get
            {
                Usd_PrimFlags ret = (Usd_PrimFlags)UsdCsPINVOKE.UsdPrimIsAbstract_get();
                return ret;
            }
        }

        public static Usd_PrimFlags UsdPrimIsDefined
        {
            get
            {
                Usd_PrimFlags ret = (Usd_PrimFlags)UsdCsPINVOKE.UsdPrimIsDefined_get();
                return ret;
            }
        }

        public static Usd_PrimFlags UsdPrimIsInstance
        {
            get
            {
                Usd_PrimFlags ret = (Usd_PrimFlags)UsdCsPINVOKE.UsdPrimIsInstance_get();
                return ret;
            }
        }

        public static Usd_PrimFlags UsdPrimHasDefiningSpecifier
        {
            get
            {
                Usd_PrimFlags ret = (Usd_PrimFlags)UsdCsPINVOKE.UsdPrimHasDefiningSpecifier_get();
                return ret;
            }
        }

        public static Usd_PrimFlagsConjunction UsdPrimDefaultPredicate
        {
            get
            {
                global::System.IntPtr cPtr = UsdCsPINVOKE.UsdPrimDefaultPredicate_get();
                Usd_PrimFlagsConjunction ret = (cPtr == global::System.IntPtr.Zero) ? null : new Usd_PrimFlagsConjunction(cPtr, false);
                return ret;
            }
        }

        public static Usd_PrimFlagsPredicate UsdPrimAllPrimsPredicate
        {
            get
            {
                global::System.IntPtr cPtr = UsdCsPINVOKE.UsdPrimAllPrimsPredicate_get();
                Usd_PrimFlagsPredicate ret = (cPtr == global::System.IntPtr.Zero) ? null : new Usd_PrimFlagsPredicate(cPtr, false);
                return ret;
            }
        }

        public static Usd_PrimFlagsPredicate UsdTraverseInstanceProxies(Usd_PrimFlagsPredicate predicate)
        {
            Usd_PrimFlagsPredicate ret = new Usd_PrimFlagsPredicate(UsdCsPINVOKE.UsdTraverseInstanceProxies__SWIG_0(Usd_PrimFlagsPredicate.getCPtr(predicate)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static Usd_PrimFlagsPredicate UsdTraverseInstanceProxies()
        {
            Usd_PrimFlagsPredicate ret = new Usd_PrimFlagsPredicate(UsdCsPINVOKE.UsdTraverseInstanceProxies__SWIG_1(), true);
            return ret;
        }

        public static uint hash_value(UsdStagePopulationMask arg0)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_60(UsdStagePopulationMask.getCPtr(arg0));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void swap(UsdStagePopulationMask l, UsdStagePopulationMask r)
        {
            UsdCsPINVOKE.swap__SWIG_8(UsdStagePopulationMask.getCPtr(l), UsdStagePopulationMask.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void swap(UsdStageCache lhs, UsdStageCache rhs)
        {
            UsdCsPINVOKE.swap__SWIG_9(UsdStageCache.getCPtr(lhs), UsdStageCache.getCPtr(rhs));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static uint hash_value(UsdStageLoadRules arg0)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_61(UsdStageLoadRules.getCPtr(arg0));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void swap(UsdStageLoadRules l, UsdStageLoadRules r)
        {
            UsdCsPINVOKE.swap__SWIG_10(UsdStageLoadRules.getCPtr(l), UsdStageLoadRules.getCPtr(r));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static bool UsdIsSubtype(UsdObjType baseType, UsdObjType subType)
        {
            bool ret = UsdCsPINVOKE.UsdIsSubtype((int)baseType, (int)subType);
            return ret;
        }

        public static bool UsdIsConvertible(UsdObjType from, UsdObjType to)
        {
            bool ret = UsdCsPINVOKE.UsdIsConvertible((int)from, (int)to);
            return ret;
        }

        public static bool UsdIsConcrete(UsdObjType type)
        {
            bool ret = UsdCsPINVOKE.UsdIsConcrete((int)type);
            return ret;
        }

        public static uint hash_value(UsdObject obj)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_62(UsdObject.getCPtr(obj));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdObjType Usd_GetObjType(UsdObject obj)
        {
            UsdObjType ret = (UsdObjType)UsdCsPINVOKE.Usd_GetObjType(UsdObject.getCPtr(obj));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void GetPrimFromVector(UsdPrimVector prims, int index, UsdPrim output)
        {
            UsdCsPINVOKE.GetPrimFromVector(UsdPrimVector.getCPtr(prims), index, UsdPrim.getCPtr(output));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static uint hash_value(UsdGeomPrimvar obj)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_63(UsdGeomPrimvar.getCPtr(obj));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdGeomPointInstancerApplyNewStyleListOps()
        {
            bool ret = UsdCsPINVOKE.UsdGeomPointInstancerApplyNewStyleListOps();
            return ret;
        }

        public static bool UsdGeomPointInstancerSetOrMergeOverOp(UsdGeomLongVector items, SdfListOpType op, UsdPrim prim, TfToken metadataName)
        {
            bool ret = UsdCsPINVOKE.UsdGeomPointInstancerSetOrMergeOverOp(UsdGeomLongVector.getCPtr(items), (int)op, UsdPrim.getCPtr(prim), TfToken.getCPtr(metadataName));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(UsdSkelAnimQuery query)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_64(UsdSkelAnimQuery.getCPtr(query));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint hash_value(UsdSkelSkeletonQuery query)
        {
            uint ret = UsdCsPINVOKE.hash_value__SWIG_65(UsdSkelSkeletonQuery.getCPtr(query));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelIsSkelAnimationPrim(UsdPrim prim)
        {
            bool ret = UsdCsPINVOKE.UsdSkelIsSkelAnimationPrim(UsdPrim.getCPtr(prim));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelIsSkinnablePrim(UsdPrim prim)
        {
            bool ret = UsdCsPINVOKE.UsdSkelIsSkinnablePrim(UsdPrim.getCPtr(prim));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t xforms, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t inverseXforms, SWIGTYPE_p_TfSpanT_GfMatrix4d_t jointLocalXforms, GfMatrix4d rootInverseXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_0(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(inverseXforms), SWIGTYPE_p_TfSpanT_GfMatrix4d_t.getCPtr(jointLocalXforms), GfMatrix4d.getCPtr(rootInverseXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t xforms, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t inverseXforms, SWIGTYPE_p_TfSpanT_GfMatrix4d_t jointLocalXforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_1(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(inverseXforms), SWIGTYPE_p_TfSpanT_GfMatrix4d_t.getCPtr(jointLocalXforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t xforms, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t inverseXforms, SWIGTYPE_p_TfSpanT_GfMatrix4f_t jointLocalXforms, GfMatrix4f rootInverseXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_2(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(inverseXforms), SWIGTYPE_p_TfSpanT_GfMatrix4f_t.getCPtr(jointLocalXforms), GfMatrix4f.getCPtr(rootInverseXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t xforms, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t inverseXforms, SWIGTYPE_p_TfSpanT_GfMatrix4f_t jointLocalXforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_3(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(inverseXforms), SWIGTYPE_p_TfSpanT_GfMatrix4f_t.getCPtr(jointLocalXforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t xforms, SWIGTYPE_p_TfSpanT_GfMatrix4d_t jointLocalXforms, GfMatrix4d rootInverseXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_4(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfMatrix4d_t.getCPtr(jointLocalXforms), GfMatrix4d.getCPtr(rootInverseXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t xforms, SWIGTYPE_p_TfSpanT_GfMatrix4d_t jointLocalXforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_5(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfMatrix4d_t.getCPtr(jointLocalXforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t xforms, SWIGTYPE_p_TfSpanT_GfMatrix4f_t jointLocalXforms, GfMatrix4f rootInverseXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_6(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfMatrix4f_t.getCPtr(jointLocalXforms), GfMatrix4f.getCPtr(rootInverseXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t xforms, SWIGTYPE_p_TfSpanT_GfMatrix4f_t jointLocalXforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_7(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfMatrix4f_t.getCPtr(jointLocalXforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, VtMatrix4dArray xforms, VtMatrix4dArray inverseXforms, VtMatrix4dArray jointLocalXforms, GfMatrix4d rootInverseXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_8(UsdSkelTopology.getCPtr(topology), VtMatrix4dArray.getCPtr(xforms), VtMatrix4dArray.getCPtr(inverseXforms), VtMatrix4dArray.getCPtr(jointLocalXforms), GfMatrix4d.getCPtr(rootInverseXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, VtMatrix4dArray xforms, VtMatrix4dArray inverseXforms, VtMatrix4dArray jointLocalXforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_9(UsdSkelTopology.getCPtr(topology), VtMatrix4dArray.getCPtr(xforms), VtMatrix4dArray.getCPtr(inverseXforms), VtMatrix4dArray.getCPtr(jointLocalXforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, VtMatrix4dArray xforms, VtMatrix4dArray jointLocalXforms, GfMatrix4d rootInverseXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_10(UsdSkelTopology.getCPtr(topology), VtMatrix4dArray.getCPtr(xforms), VtMatrix4dArray.getCPtr(jointLocalXforms), GfMatrix4d.getCPtr(rootInverseXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, VtMatrix4dArray xforms, VtMatrix4dArray jointLocalXforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_11(UsdSkelTopology.getCPtr(topology), VtMatrix4dArray.getCPtr(xforms), VtMatrix4dArray.getCPtr(jointLocalXforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, GfMatrix4d xforms, GfMatrix4d inverseXforms, GfMatrix4d jointLocalXforms, GfMatrix4d rootInverseXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_12(UsdSkelTopology.getCPtr(topology), GfMatrix4d.getCPtr(xforms), GfMatrix4d.getCPtr(inverseXforms), GfMatrix4d.getCPtr(jointLocalXforms), GfMatrix4d.getCPtr(rootInverseXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointLocalTransforms(UsdSkelTopology topology, GfMatrix4d xforms, GfMatrix4d inverseXforms, GfMatrix4d jointLocalXforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointLocalTransforms__SWIG_13(UsdSkelTopology.getCPtr(topology), GfMatrix4d.getCPtr(xforms), GfMatrix4d.getCPtr(inverseXforms), GfMatrix4d.getCPtr(jointLocalXforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelConcatJointTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t jointLocalXforms, SWIGTYPE_p_TfSpanT_GfMatrix4d_t xforms, GfMatrix4d rootXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelConcatJointTransforms__SWIG_0(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(jointLocalXforms), SWIGTYPE_p_TfSpanT_GfMatrix4d_t.getCPtr(xforms), GfMatrix4d.getCPtr(rootXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelConcatJointTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t jointLocalXforms, SWIGTYPE_p_TfSpanT_GfMatrix4d_t xforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelConcatJointTransforms__SWIG_1(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(jointLocalXforms), SWIGTYPE_p_TfSpanT_GfMatrix4d_t.getCPtr(xforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelConcatJointTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t jointLocalXforms, SWIGTYPE_p_TfSpanT_GfMatrix4f_t xforms, GfMatrix4f rootXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelConcatJointTransforms__SWIG_2(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(jointLocalXforms), SWIGTYPE_p_TfSpanT_GfMatrix4f_t.getCPtr(xforms), GfMatrix4f.getCPtr(rootXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelConcatJointTransforms(UsdSkelTopology topology, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t jointLocalXforms, SWIGTYPE_p_TfSpanT_GfMatrix4f_t xforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelConcatJointTransforms__SWIG_3(UsdSkelTopology.getCPtr(topology), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(jointLocalXforms), SWIGTYPE_p_TfSpanT_GfMatrix4f_t.getCPtr(xforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelConcatJointTransforms(UsdSkelTopology topology, VtMatrix4dArray jointLocalXforms, VtMatrix4dArray xforms, GfMatrix4d rootXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelConcatJointTransforms__SWIG_4(UsdSkelTopology.getCPtr(topology), VtMatrix4dArray.getCPtr(jointLocalXforms), VtMatrix4dArray.getCPtr(xforms), GfMatrix4d.getCPtr(rootXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelConcatJointTransforms(UsdSkelTopology topology, VtMatrix4dArray jointLocalXforms, VtMatrix4dArray xforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelConcatJointTransforms__SWIG_5(UsdSkelTopology.getCPtr(topology), VtMatrix4dArray.getCPtr(jointLocalXforms), VtMatrix4dArray.getCPtr(xforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelConcatJointTransforms(UsdSkelTopology topology, GfMatrix4d jointLocalXforms, GfMatrix4d xforms, GfMatrix4d rootXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelConcatJointTransforms__SWIG_6(UsdSkelTopology.getCPtr(topology), GfMatrix4d.getCPtr(jointLocalXforms), GfMatrix4d.getCPtr(xforms), GfMatrix4d.getCPtr(rootXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelConcatJointTransforms(UsdSkelTopology topology, GfMatrix4d jointLocalXforms, GfMatrix4d xforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelConcatJointTransforms__SWIG_7(UsdSkelTopology.getCPtr(topology), GfMatrix4d.getCPtr(jointLocalXforms), GfMatrix4d.getCPtr(xforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointsExtent(VtMatrix4dArray joints, VtVec3fArray extent, float pad, GfMatrix4d rootXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointsExtent__SWIG_3(VtMatrix4dArray.getCPtr(joints), VtVec3fArray.getCPtr(extent), pad, GfMatrix4d.getCPtr(rootXform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointsExtent(VtMatrix4dArray joints, VtVec3fArray extent, float pad)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointsExtent__SWIG_4(VtMatrix4dArray.getCPtr(joints), VtVec3fArray.getCPtr(extent), pad);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointsExtent(VtMatrix4dArray joints, VtVec3fArray extent)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointsExtent__SWIG_5(VtMatrix4dArray.getCPtr(joints), VtVec3fArray.getCPtr(extent));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelComputeJointsExtent(GfMatrix4d xforms, uint numXforms, VtVec3fArray extent, float pad, GfMatrix4d rootXform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointsExtent__SWIG_6(GfMatrix4d.getCPtr(xforms), numXforms, VtVec3fArray.getCPtr(extent), pad, GfMatrix4d.getCPtr(rootXform));
            return ret;
        }

        public static bool UsdSkelComputeJointsExtent(GfMatrix4d xforms, uint numXforms, VtVec3fArray extent, float pad)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointsExtent__SWIG_7(GfMatrix4d.getCPtr(xforms), numXforms, VtVec3fArray.getCPtr(extent), pad);
            return ret;
        }

        public static bool UsdSkelComputeJointsExtent(GfMatrix4d xforms, uint numXforms, VtVec3fArray extent)
        {
            bool ret = UsdCsPINVOKE.UsdSkelComputeJointsExtent__SWIG_8(GfMatrix4d.getCPtr(xforms), numXforms, VtVec3fArray.getCPtr(extent));
            return ret;
        }

        public static bool UsdSkelDecomposeTransforms(SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t xforms, SWIGTYPE_p_TfSpanT_GfVec3f_t translations, SWIGTYPE_p_TfSpanT_GfQuatf_t rotations, SWIGTYPE_p_TfSpanT_GfVec3h_t scales)
        {
            bool ret = UsdCsPINVOKE.UsdSkelDecomposeTransforms__SWIG_0(SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(translations), SWIGTYPE_p_TfSpanT_GfQuatf_t.getCPtr(rotations), SWIGTYPE_p_TfSpanT_GfVec3h_t.getCPtr(scales));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelDecomposeTransforms(SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t xforms, SWIGTYPE_p_TfSpanT_GfVec3f_t translations, SWIGTYPE_p_TfSpanT_GfQuatf_t rotations, SWIGTYPE_p_TfSpanT_GfVec3h_t scales)
        {
            bool ret = UsdCsPINVOKE.UsdSkelDecomposeTransforms__SWIG_1(SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(xforms), SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(translations), SWIGTYPE_p_TfSpanT_GfQuatf_t.getCPtr(rotations), SWIGTYPE_p_TfSpanT_GfVec3h_t.getCPtr(scales));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelDecomposeTransforms(VtMatrix4dArray xforms, VtVec3fArray translations, VtQuatfArray rotations, VtVec3hArray scales)
        {
            bool ret = UsdCsPINVOKE.UsdSkelDecomposeTransforms__SWIG_2(VtMatrix4dArray.getCPtr(xforms), VtVec3fArray.getCPtr(translations), VtQuatfArray.getCPtr(rotations), VtVec3hArray.getCPtr(scales));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelDecomposeTransforms(GfMatrix4d xforms, GfVec3f translations, GfQuatf rotations, GfVec3h scales, uint count)
        {
            bool ret = UsdCsPINVOKE.UsdSkelDecomposeTransforms__SWIG_3(GfMatrix4d.getCPtr(xforms), GfVec3f.getCPtr(translations), GfQuatf.getCPtr(rotations), GfVec3h.getCPtr(scales), count);
            return ret;
        }

        public static bool UsdSkelMakeTransforms(SWIGTYPE_p_TfSpanT_GfVec3f_const_t translations, SWIGTYPE_p_TfSpanT_GfQuatf_const_t rotations, SWIGTYPE_p_TfSpanT_GfVec3h_const_t scales, SWIGTYPE_p_TfSpanT_GfMatrix4d_t xforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelMakeTransforms__SWIG_0(SWIGTYPE_p_TfSpanT_GfVec3f_const_t.getCPtr(translations), SWIGTYPE_p_TfSpanT_GfQuatf_const_t.getCPtr(rotations), SWIGTYPE_p_TfSpanT_GfVec3h_const_t.getCPtr(scales), SWIGTYPE_p_TfSpanT_GfMatrix4d_t.getCPtr(xforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelMakeTransforms(SWIGTYPE_p_TfSpanT_GfVec3f_const_t translations, SWIGTYPE_p_TfSpanT_GfQuatf_const_t rotations, SWIGTYPE_p_TfSpanT_GfVec3h_const_t scales, SWIGTYPE_p_TfSpanT_GfMatrix4f_t xforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelMakeTransforms__SWIG_1(SWIGTYPE_p_TfSpanT_GfVec3f_const_t.getCPtr(translations), SWIGTYPE_p_TfSpanT_GfQuatf_const_t.getCPtr(rotations), SWIGTYPE_p_TfSpanT_GfVec3h_const_t.getCPtr(scales), SWIGTYPE_p_TfSpanT_GfMatrix4f_t.getCPtr(xforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelMakeTransforms(VtVec3fArray translations, VtQuatfArray rotations, VtVec3hArray scales, VtMatrix4dArray xforms)
        {
            bool ret = UsdCsPINVOKE.UsdSkelMakeTransforms__SWIG_2(VtVec3fArray.getCPtr(translations), VtQuatfArray.getCPtr(rotations), VtVec3hArray.getCPtr(scales), VtMatrix4dArray.getCPtr(xforms));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelMakeTransforms(GfVec3f translations, GfQuatf rotations, GfVec3h scales, GfMatrix4d xforms, uint count)
        {
            bool ret = UsdCsPINVOKE.UsdSkelMakeTransforms__SWIG_3(GfVec3f.getCPtr(translations), GfQuatf.getCPtr(rotations), GfVec3h.getCPtr(scales), GfMatrix4d.getCPtr(xforms), count);
            return ret;
        }

        public static bool UsdSkelNormalizeWeights(SWIGTYPE_p_TfSpanT_float_t weights, int numInfluencesPerComponent)
        {
            bool ret = UsdCsPINVOKE.UsdSkelNormalizeWeights__SWIG_0(SWIGTYPE_p_TfSpanT_float_t.getCPtr(weights), numInfluencesPerComponent);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelNormalizeWeights(VtFloatArray weights, int numInfluencesPerComponent)
        {
            bool ret = UsdCsPINVOKE.UsdSkelNormalizeWeights__SWIG_1(VtFloatArray.getCPtr(weights), numInfluencesPerComponent);
            return ret;
        }

        public static bool UsdSkelSortInfluences(SWIGTYPE_p_TfSpanT_int_t indices, SWIGTYPE_p_TfSpanT_float_t weights, int numInfluencesPerComponent)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSortInfluences__SWIG_0(SWIGTYPE_p_TfSpanT_int_t.getCPtr(indices), SWIGTYPE_p_TfSpanT_float_t.getCPtr(weights), numInfluencesPerComponent);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSortInfluences(VtIntArray indices, VtFloatArray weights, int numInfluencesPerComponent)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSortInfluences__SWIG_1(VtIntArray.getCPtr(indices), VtFloatArray.getCPtr(weights), numInfluencesPerComponent);
            return ret;
        }

        public static bool UsdSkelExpandConstantInfluencesToVarying(VtIntArray indices, uint size)
        {
            bool ret = UsdCsPINVOKE.UsdSkelExpandConstantInfluencesToVarying__SWIG_0(VtIntArray.getCPtr(indices), size);
            return ret;
        }

        public static bool UsdSkelExpandConstantInfluencesToVarying(VtFloatArray weights, uint size)
        {
            bool ret = UsdCsPINVOKE.UsdSkelExpandConstantInfluencesToVarying__SWIG_1(VtFloatArray.getCPtr(weights), size);
            return ret;
        }

        public static bool UsdSkelResizeInfluences(VtIntArray indices, int srcNumInfluencesPerComponent, int newNumInfluencesPerComponent)
        {
            bool ret = UsdCsPINVOKE.UsdSkelResizeInfluences__SWIG_0(VtIntArray.getCPtr(indices), srcNumInfluencesPerComponent, newNumInfluencesPerComponent);
            return ret;
        }

        public static bool UsdSkelResizeInfluences(VtFloatArray weights, int srcNumInfluencesPerComponent, int newNumInfluencesPerComponent)
        {
            bool ret = UsdCsPINVOKE.UsdSkelResizeInfluences__SWIG_1(VtFloatArray.getCPtr(weights), srcNumInfluencesPerComponent, newNumInfluencesPerComponent);
            return ret;
        }

        public static bool UsdSkelInterleaveInfluences(SWIGTYPE_p_TfSpanT_int_const_t indices, SWIGTYPE_p_TfSpanT_float_const_t weights, SWIGTYPE_p_TfSpanT_GfVec2f_t interleavedInfluences)
        {
            bool ret = UsdCsPINVOKE.UsdSkelInterleaveInfluences(SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(indices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(weights), SWIGTYPE_p_TfSpanT_GfVec2f_t.getCPtr(interleavedInfluences));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t points, bool inSerial)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_0(GfMatrix4d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(points), inSerial);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t points)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_1(GfMatrix4d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(points));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t points, bool inSerial)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_2(GfMatrix4f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(points), inSerial);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t points)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_3(GfMatrix4f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(points));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t points, bool inSerial)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_4(GfMatrix4d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(points), inSerial);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t points)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_5(GfMatrix4d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(points));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t points, bool inSerial)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_6(GfMatrix4f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(points), inSerial);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t points)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_7(GfMatrix4f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(points));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4d geomBindTransform, VtMatrix4dArray jointXforms, VtIntArray jointIndices, VtFloatArray jointWeights, int numInfluencesPerPoint, VtVec3fArray points)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_8(GfMatrix4d.getCPtr(geomBindTransform), VtMatrix4dArray.getCPtr(jointXforms), VtIntArray.getCPtr(jointIndices), VtFloatArray.getCPtr(jointWeights), numInfluencesPerPoint, VtVec3fArray.getCPtr(points));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4d geomBindTransform, GfMatrix4d jointXforms, uint numJoints, SWIGTYPE_p_int jointIndices, SWIGTYPE_p_float jointWeights, uint numInfluences, int numInfluencesPerPoint, GfVec3f points, uint numPoints, bool inSerial)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_9(GfMatrix4d.getCPtr(geomBindTransform), GfMatrix4d.getCPtr(jointXforms), numJoints, SWIGTYPE_p_int.getCPtr(jointIndices), SWIGTYPE_p_float.getCPtr(jointWeights), numInfluences, numInfluencesPerPoint, GfVec3f.getCPtr(points), numPoints, inSerial);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinPointsLBS(GfMatrix4d geomBindTransform, GfMatrix4d jointXforms, uint numJoints, SWIGTYPE_p_int jointIndices, SWIGTYPE_p_float jointWeights, uint numInfluences, int numInfluencesPerPoint, GfVec3f points, uint numPoints)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinPointsLBS__SWIG_10(GfMatrix4d.getCPtr(geomBindTransform), GfMatrix4d.getCPtr(jointXforms), numJoints, SWIGTYPE_p_int.getCPtr(jointIndices), SWIGTYPE_p_float.getCPtr(jointWeights), numInfluences, numInfluencesPerPoint, GfVec3f.getCPtr(points), numPoints);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinNormalsLBS(GfMatrix3d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix3d_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t normals, bool inSerial)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinNormalsLBS__SWIG_0(GfMatrix3d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix3d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(normals), inSerial);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinNormalsLBS(GfMatrix3d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix3d_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t normals)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinNormalsLBS__SWIG_1(GfMatrix3d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix3d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(normals));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinNormalsLBS(GfMatrix3f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix3f_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t normals, bool inSerial)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinNormalsLBS__SWIG_2(GfMatrix3f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix3f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(normals), inSerial);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinNormalsLBS(GfMatrix3f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix3f_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t normals)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinNormalsLBS__SWIG_3(GfMatrix3f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix3f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(normals));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinNormalsLBS(GfMatrix3d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix3d_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t normals, bool inSerial)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinNormalsLBS__SWIG_4(GfMatrix3d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix3d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(normals), inSerial);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinNormalsLBS(GfMatrix3d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix3d_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t normals)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinNormalsLBS__SWIG_5(GfMatrix3d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix3d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(normals));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinNormalsLBS(GfMatrix3f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix3f_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t normals, bool inSerial)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinNormalsLBS__SWIG_6(GfMatrix3f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix3f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(normals), inSerial);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinNormalsLBS(GfMatrix3f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix3f_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, int numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t normals)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinNormalsLBS__SWIG_7(GfMatrix3f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix3f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), numInfluencesPerPoint, SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(normals));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinTransformLBS(GfMatrix4d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, GfMatrix4d xform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinTransformLBS__SWIG_0(GfMatrix4d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), GfMatrix4d.getCPtr(xform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinTransformLBS(GfMatrix4f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t jointXforms, SWIGTYPE_p_TfSpanT_int_const_t jointIndices, SWIGTYPE_p_TfSpanT_float_const_t jointWeights, GfMatrix4f xform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinTransformLBS__SWIG_1(GfMatrix4f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(jointIndices), SWIGTYPE_p_TfSpanT_float_const_t.getCPtr(jointWeights), GfMatrix4f.getCPtr(xform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinTransformLBS(GfMatrix4d geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, GfMatrix4d xform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinTransformLBS__SWIG_2(GfMatrix4d.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4d_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), GfMatrix4d.getCPtr(xform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinTransformLBS(GfMatrix4f geomBindTransform, SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t jointXforms, SWIGTYPE_p_TfSpanT_GfVec2f_const_t influences, GfMatrix4f xform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinTransformLBS__SWIG_3(GfMatrix4f.getCPtr(geomBindTransform), SWIGTYPE_p_TfSpanT_GfMatrix4f_const_t.getCPtr(jointXforms), SWIGTYPE_p_TfSpanT_GfVec2f_const_t.getCPtr(influences), GfMatrix4f.getCPtr(xform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelSkinTransformLBS(GfMatrix4d geomBindTransform, GfMatrix4d jointXforms, uint numJoints, SWIGTYPE_p_int jointIndices, SWIGTYPE_p_float jointWeights, uint numInfluences, GfMatrix4d xform)
        {
            bool ret = UsdCsPINVOKE.UsdSkelSkinTransformLBS__SWIG_4(GfMatrix4d.getCPtr(geomBindTransform), GfMatrix4d.getCPtr(jointXforms), numJoints, SWIGTYPE_p_int.getCPtr(jointIndices), SWIGTYPE_p_float.getCPtr(jointWeights), numInfluences, GfMatrix4d.getCPtr(xform));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdSkelApplyBlendShape(float weight, SWIGTYPE_p_TfSpanT_GfVec3f_const_t offsets, SWIGTYPE_p_TfSpanT_int_const_t indices, SWIGTYPE_p_TfSpanT_GfVec3f_t points)
        {
            bool ret = UsdCsPINVOKE.UsdSkelApplyBlendShape(weight, SWIGTYPE_p_TfSpanT_GfVec3f_const_t.getCPtr(offsets), SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(indices), SWIGTYPE_p_TfSpanT_GfVec3f_t.getCPtr(points));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static GfVec3f UsdLuxBlackbodyTemperatureAsRgb(float colorTemp)
        {
            GfVec3f ret = new GfVec3f(UsdCsPINVOKE.UsdLuxBlackbodyTemperatureAsRgb(colorTemp), true);
            return ret;
        }

        public static int UsdRiConvertToRManInterpolateBoundary(TfToken token)
        {
            int ret = UsdCsPINVOKE.UsdRiConvertToRManInterpolateBoundary(TfToken.getCPtr(token));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfToken UsdRiConvertFromRManInterpolateBoundary(int i)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdRiConvertFromRManInterpolateBoundary(i), false);
            return ret;
        }

        public static int UsdRiConvertToRManFaceVaryingLinearInterpolation(TfToken token)
        {
            int ret = UsdCsPINVOKE.UsdRiConvertToRManFaceVaryingLinearInterpolation(TfToken.getCPtr(token));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfToken UsdRiConvertFromRManFaceVaryingLinearInterpolation(int i)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdRiConvertFromRManFaceVaryingLinearInterpolation(i), false);
            return ret;
        }

        public static int UsdRiConvertToRManTriangleSubdivisionRule(TfToken token)
        {
            int ret = UsdCsPINVOKE.UsdRiConvertToRManTriangleSubdivisionRule(TfToken.getCPtr(token));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfToken UsdRiConvertFromRManTriangleSubdivisionRule(int i)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdRiConvertFromRManTriangleSubdivisionRule(i), false);
            return ret;
        }

        public static UsdStage UsdUtilsComputeUsdStageStats(string rootLayerPath, VtDictionary stats)
        {
            global::System.IntPtr cPtr = UsdCsPINVOKE.UsdUtilsComputeUsdStageStats__SWIG_0(rootLayerPath, VtDictionary.getCPtr(stats));
            UsdStage ret = (cPtr == global::System.IntPtr.Zero) ? null : new UsdStage(cPtr, true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static uint UsdUtilsComputeUsdStageStats(UsdStageWeakPtr stage, VtDictionary stats)
        {
            uint ret = UsdCsPINVOKE.UsdUtilsComputeUsdStageStats__SWIG_1(UsdStageWeakPtr.getCPtr(stage), VtDictionary.getCPtr(stats));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_TfEnvSettingT_bool_t USD_FORCE_DEFAULT_MATERIALS_SCOPE_NAME
        {
            set
            {
                UsdCsPINVOKE.USD_FORCE_DEFAULT_MATERIALS_SCOPE_NAME_set(SWIGTYPE_p_TfEnvSettingT_bool_t.getCPtr(value));
                if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            }
            get
            {
                SWIGTYPE_p_TfEnvSettingT_bool_t ret = new SWIGTYPE_p_TfEnvSettingT_bool_t(UsdCsPINVOKE.USD_FORCE_DEFAULT_MATERIALS_SCOPE_NAME_get(), true);
                if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
                return ret;
            }
        }

        public static TfToken UsdUtilsGetAlphaAttributeNameForColor(TfToken colorAttrName)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdUtilsGetAlphaAttributeNameForColor(TfToken.getCPtr(colorAttrName)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfToken UsdUtilsGetModelNameFromRootLayer(SdfLayerHandle rootLayer)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdUtilsGetModelNameFromRootLayer(SdfLayerHandle.getCPtr(rootLayer)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SWIGTYPE_p_std__setT_UsdUtilsRegisteredVariantSet_t UsdUtilsGetRegisteredVariantSets()
        {
            SWIGTYPE_p_std__setT_UsdUtilsRegisteredVariantSet_t ret = new SWIGTYPE_p_std__setT_UsdUtilsRegisteredVariantSet_t(UsdCsPINVOKE.UsdUtilsGetRegisteredVariantSets(), false);
            return ret;
        }

        public static UsdPrim UsdUtilsGetPrimAtPathWithForwarding(UsdStageWeakPtr stage, SdfPath path)
        {
            UsdPrim ret = new UsdPrim(UsdCsPINVOKE.UsdUtilsGetPrimAtPathWithForwarding(UsdStageWeakPtr.getCPtr(stage), SdfPath.getCPtr(path)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdPrim UsdUtilsUninstancePrimAtPath(UsdStageWeakPtr stage, SdfPath path)
        {
            UsdPrim ret = new UsdPrim(UsdCsPINVOKE.UsdUtilsUninstancePrimAtPath(UsdStageWeakPtr.getCPtr(stage), SdfPath.getCPtr(path)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static TfToken UsdUtilsGetPrimaryUVSetName()
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdUtilsGetPrimaryUVSetName(), true);
            return ret;
        }

        public static TfToken UsdUtilsGetPrefName()
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdUtilsGetPrefName(), true);
            return ret;
        }

        public static TfToken UsdUtilsGetMaterialsScopeName(bool forceDefault)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdUtilsGetMaterialsScopeName__SWIG_0(forceDefault), true);
            return ret;
        }

        public static TfToken UsdUtilsGetMaterialsScopeName()
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdUtilsGetMaterialsScopeName__SWIG_1(), true);
            return ret;
        }

        public static TfToken UsdUtilsGetPrimaryCameraName(bool forceDefault)
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdUtilsGetPrimaryCameraName__SWIG_0(forceDefault), true);
            return ret;
        }

        public static TfToken UsdUtilsGetPrimaryCameraName()
        {
            TfToken ret = new TfToken(UsdCsPINVOKE.UsdUtilsGetPrimaryCameraName__SWIG_1(), true);
            return ret;
        }

        public static void UsdUtilsStitchLayers(SdfLayerHandle strongLayer, SdfLayerHandle weakLayer)
        {
            UsdCsPINVOKE.UsdUtilsStitchLayers(SdfLayerHandle.getCPtr(strongLayer), SdfLayerHandle.getCPtr(weakLayer));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static void UsdUtilsStitchInfo(SdfSpecHandle strongObj, SdfSpecHandle weakObj)
        {
            UsdCsPINVOKE.UsdUtilsStitchInfo(SdfSpecHandle.getCPtr(strongObj), SdfSpecHandle.getCPtr(weakObj));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static bool UsdUtilsStitchClips(SdfLayerHandle resultLayer, StdStringVector clipLayerFiles, SdfPath clipPath, double startTimeCode, double endTimeCode, bool interpolateMissingClipValues, TfToken clipSet)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClips__SWIG_0(SdfLayerHandle.getCPtr(resultLayer), StdStringVector.getCPtr(clipLayerFiles), SdfPath.getCPtr(clipPath), startTimeCode, endTimeCode, interpolateMissingClipValues, TfToken.getCPtr(clipSet));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsStitchClips(SdfLayerHandle resultLayer, StdStringVector clipLayerFiles, SdfPath clipPath, double startTimeCode, double endTimeCode, bool interpolateMissingClipValues)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClips__SWIG_1(SdfLayerHandle.getCPtr(resultLayer), StdStringVector.getCPtr(clipLayerFiles), SdfPath.getCPtr(clipPath), startTimeCode, endTimeCode, interpolateMissingClipValues);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsStitchClips(SdfLayerHandle resultLayer, StdStringVector clipLayerFiles, SdfPath clipPath, double startTimeCode, double endTimeCode)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClips__SWIG_2(SdfLayerHandle.getCPtr(resultLayer), StdStringVector.getCPtr(clipLayerFiles), SdfPath.getCPtr(clipPath), startTimeCode, endTimeCode);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsStitchClips(SdfLayerHandle resultLayer, StdStringVector clipLayerFiles, SdfPath clipPath, double startTimeCode)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClips__SWIG_3(SdfLayerHandle.getCPtr(resultLayer), StdStringVector.getCPtr(clipLayerFiles), SdfPath.getCPtr(clipPath), startTimeCode);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsStitchClips(SdfLayerHandle resultLayer, StdStringVector clipLayerFiles, SdfPath clipPath)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClips__SWIG_4(SdfLayerHandle.getCPtr(resultLayer), StdStringVector.getCPtr(clipLayerFiles), SdfPath.getCPtr(clipPath));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsStitchClipsTopology(SdfLayerHandle topologyLayer, StdStringVector clipLayerFiles)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClipsTopology(SdfLayerHandle.getCPtr(topologyLayer), StdStringVector.getCPtr(clipLayerFiles));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsStitchClipsTemplate(SdfLayerHandle resultLayer, SdfLayerHandle topologyLayer, SdfPath clipPath, string templatePath, double startTime, double endTime, double stride, double activeOffset, bool interpolateMissingClipValues, TfToken clipSet)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClipsTemplate__SWIG_0(SdfLayerHandle.getCPtr(resultLayer), SdfLayerHandle.getCPtr(topologyLayer), SdfPath.getCPtr(clipPath), templatePath, startTime, endTime, stride, activeOffset, interpolateMissingClipValues, TfToken.getCPtr(clipSet));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsStitchClipsTemplate(SdfLayerHandle resultLayer, SdfLayerHandle topologyLayer, SdfPath clipPath, string templatePath, double startTime, double endTime, double stride, double activeOffset, bool interpolateMissingClipValues)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClipsTemplate__SWIG_1(SdfLayerHandle.getCPtr(resultLayer), SdfLayerHandle.getCPtr(topologyLayer), SdfPath.getCPtr(clipPath), templatePath, startTime, endTime, stride, activeOffset, interpolateMissingClipValues);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsStitchClipsTemplate(SdfLayerHandle resultLayer, SdfLayerHandle topologyLayer, SdfPath clipPath, string templatePath, double startTime, double endTime, double stride, double activeOffset)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClipsTemplate__SWIG_2(SdfLayerHandle.getCPtr(resultLayer), SdfLayerHandle.getCPtr(topologyLayer), SdfPath.getCPtr(clipPath), templatePath, startTime, endTime, stride, activeOffset);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsStitchClipsTemplate(SdfLayerHandle resultLayer, SdfLayerHandle topologyLayer, SdfPath clipPath, string templatePath, double startTime, double endTime, double stride)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsStitchClipsTemplate__SWIG_3(SdfLayerHandle.getCPtr(resultLayer), SdfLayerHandle.getCPtr(topologyLayer), SdfPath.getCPtr(clipPath), templatePath, startTime, endTime, stride);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string UsdUtilsGenerateClipTopologyName(string rootLayerName)
        {
            string ret = UsdCsPINVOKE.UsdUtilsGenerateClipTopologyName(rootLayerName);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsCopyLayerMetadata(SdfLayerHandle source, SdfLayerHandle destination, bool skipSublayers, bool bakeUnauthoredFallbacks)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsCopyLayerMetadata__SWIG_0(SdfLayerHandle.getCPtr(source), SdfLayerHandle.getCPtr(destination), skipSublayers, bakeUnauthoredFallbacks);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsCopyLayerMetadata(SdfLayerHandle source, SdfLayerHandle destination, bool skipSublayers)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsCopyLayerMetadata__SWIG_1(SdfLayerHandle.getCPtr(source), SdfLayerHandle.getCPtr(destination), skipSublayers);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsCopyLayerMetadata(SdfLayerHandle source, SdfLayerHandle destination)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsCopyLayerMetadata__SWIG_2(SdfLayerHandle.getCPtr(source), SdfLayerHandle.getCPtr(destination));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsComputeCollectionIncludesAndExcludes(SWIGTYPE_p_std__setT_SdfPath_t includedRootPaths, UsdStageWeakPtr usdStage, SdfPathVector pathsToInclude, SdfPathVector pathsToExclude, double minInclusionRatio, uint maxNumExcludesBelowInclude, uint minIncludeExcludeCollectionSize, SWIGTYPE_p_TfHashSetT_SdfPath_SdfPath__Hash_t pathsToIgnore)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsComputeCollectionIncludesAndExcludes__SWIG_0(SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(includedRootPaths), UsdStageWeakPtr.getCPtr(usdStage), SdfPathVector.getCPtr(pathsToInclude), SdfPathVector.getCPtr(pathsToExclude), minInclusionRatio, maxNumExcludesBelowInclude, minIncludeExcludeCollectionSize, SWIGTYPE_p_TfHashSetT_SdfPath_SdfPath__Hash_t.getCPtr(pathsToIgnore));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsComputeCollectionIncludesAndExcludes(SWIGTYPE_p_std__setT_SdfPath_t includedRootPaths, UsdStageWeakPtr usdStage, SdfPathVector pathsToInclude, SdfPathVector pathsToExclude, double minInclusionRatio, uint maxNumExcludesBelowInclude, uint minIncludeExcludeCollectionSize)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsComputeCollectionIncludesAndExcludes__SWIG_1(SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(includedRootPaths), UsdStageWeakPtr.getCPtr(usdStage), SdfPathVector.getCPtr(pathsToInclude), SdfPathVector.getCPtr(pathsToExclude), minInclusionRatio, maxNumExcludesBelowInclude, minIncludeExcludeCollectionSize);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsComputeCollectionIncludesAndExcludes(SWIGTYPE_p_std__setT_SdfPath_t includedRootPaths, UsdStageWeakPtr usdStage, SdfPathVector pathsToInclude, SdfPathVector pathsToExclude, double minInclusionRatio, uint maxNumExcludesBelowInclude)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsComputeCollectionIncludesAndExcludes__SWIG_2(SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(includedRootPaths), UsdStageWeakPtr.getCPtr(usdStage), SdfPathVector.getCPtr(pathsToInclude), SdfPathVector.getCPtr(pathsToExclude), minInclusionRatio, maxNumExcludesBelowInclude);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsComputeCollectionIncludesAndExcludes(SWIGTYPE_p_std__setT_SdfPath_t includedRootPaths, UsdStageWeakPtr usdStage, SdfPathVector pathsToInclude, SdfPathVector pathsToExclude, double minInclusionRatio)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsComputeCollectionIncludesAndExcludes__SWIG_3(SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(includedRootPaths), UsdStageWeakPtr.getCPtr(usdStage), SdfPathVector.getCPtr(pathsToInclude), SdfPathVector.getCPtr(pathsToExclude), minInclusionRatio);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsComputeCollectionIncludesAndExcludes(SWIGTYPE_p_std__setT_SdfPath_t includedRootPaths, UsdStageWeakPtr usdStage, SdfPathVector pathsToInclude, SdfPathVector pathsToExclude)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsComputeCollectionIncludesAndExcludes__SWIG_4(SWIGTYPE_p_std__setT_SdfPath_t.getCPtr(includedRootPaths), UsdStageWeakPtr.getCPtr(usdStage), SdfPathVector.getCPtr(pathsToInclude), SdfPathVector.getCPtr(pathsToExclude));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdCollectionAPI UsdUtilsAuthorCollection(TfToken collectionName, UsdPrim usdPrim, SdfPathVector pathsToInclude, SdfPathVector pathsToExclude)
        {
            UsdCollectionAPI ret = new UsdCollectionAPI(UsdCsPINVOKE.UsdUtilsAuthorCollection__SWIG_0(TfToken.getCPtr(collectionName), UsdPrim.getCPtr(usdPrim), SdfPathVector.getCPtr(pathsToInclude), SdfPathVector.getCPtr(pathsToExclude)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdCollectionAPI UsdUtilsAuthorCollection(TfToken collectionName, UsdPrim usdPrim, SdfPathVector pathsToInclude)
        {
            UsdCollectionAPI ret = new UsdCollectionAPI(UsdCsPINVOKE.UsdUtilsAuthorCollection__SWIG_1(TfToken.getCPtr(collectionName), UsdPrim.getCPtr(usdPrim), SdfPathVector.getCPtr(pathsToInclude)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdCollectionAPIVector UsdUtilsCreateCollections(SWIGTYPE_p_std__vectorT_std__pairT_TfToken_std__setT_SdfPath_t_t_t assignments, UsdPrim usdPrim, double minInclusionRatio, uint maxNumExcludesBelowInclude, uint minIncludeExcludeCollectionSize)
        {
            UsdCollectionAPIVector ret = new UsdCollectionAPIVector(UsdCsPINVOKE.UsdUtilsCreateCollections__SWIG_0(SWIGTYPE_p_std__vectorT_std__pairT_TfToken_std__setT_SdfPath_t_t_t.getCPtr(assignments), UsdPrim.getCPtr(usdPrim), minInclusionRatio, maxNumExcludesBelowInclude, minIncludeExcludeCollectionSize), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdCollectionAPIVector UsdUtilsCreateCollections(SWIGTYPE_p_std__vectorT_std__pairT_TfToken_std__setT_SdfPath_t_t_t assignments, UsdPrim usdPrim, double minInclusionRatio, uint maxNumExcludesBelowInclude)
        {
            UsdCollectionAPIVector ret = new UsdCollectionAPIVector(UsdCsPINVOKE.UsdUtilsCreateCollections__SWIG_1(SWIGTYPE_p_std__vectorT_std__pairT_TfToken_std__setT_SdfPath_t_t_t.getCPtr(assignments), UsdPrim.getCPtr(usdPrim), minInclusionRatio, maxNumExcludesBelowInclude), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdCollectionAPIVector UsdUtilsCreateCollections(SWIGTYPE_p_std__vectorT_std__pairT_TfToken_std__setT_SdfPath_t_t_t assignments, UsdPrim usdPrim, double minInclusionRatio)
        {
            UsdCollectionAPIVector ret = new UsdCollectionAPIVector(UsdCsPINVOKE.UsdUtilsCreateCollections__SWIG_2(SWIGTYPE_p_std__vectorT_std__pairT_TfToken_std__setT_SdfPath_t_t_t.getCPtr(assignments), UsdPrim.getCPtr(usdPrim), minInclusionRatio), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdCollectionAPIVector UsdUtilsCreateCollections(SWIGTYPE_p_std__vectorT_std__pairT_TfToken_std__setT_SdfPath_t_t_t assignments, UsdPrim usdPrim)
        {
            UsdCollectionAPIVector ret = new UsdCollectionAPIVector(UsdCsPINVOKE.UsdUtilsCreateCollections__SWIG_3(SWIGTYPE_p_std__vectorT_std__pairT_TfToken_std__setT_SdfPath_t_t_t.getCPtr(assignments), UsdPrim.getCPtr(usdPrim)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SdfLayerHandleVector UsdUtilsGetDirtyLayers(UsdStageWeakPtr stage, bool includeClipLayers)
        {
            SdfLayerHandleVector ret = new SdfLayerHandleVector(UsdCsPINVOKE.UsdUtilsGetDirtyLayers__SWIG_0(UsdStageWeakPtr.getCPtr(stage), includeClipLayers), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SdfLayerHandleVector UsdUtilsGetDirtyLayers(UsdStageWeakPtr stage)
        {
            SdfLayerHandleVector ret = new SdfLayerHandleVector(UsdCsPINVOKE.UsdUtilsGetDirtyLayers__SWIG_1(UsdStageWeakPtr.getCPtr(stage)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void UsdUtilsExtractExternalReferences(string filePath, StdStringVector subLayers, StdStringVector references, StdStringVector payloads)
        {
            UsdCsPINVOKE.UsdUtilsExtractExternalReferences(filePath, StdStringVector.getCPtr(subLayers), StdStringVector.getCPtr(references), StdStringVector.getCPtr(payloads));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static bool UsdUtilsCreateNewUsdzPackage(SdfAssetPath assetPath, string usdzFilePath, string firstLayerName)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsCreateNewUsdzPackage__SWIG_0(SdfAssetPath.getCPtr(assetPath), usdzFilePath, firstLayerName);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsCreateNewUsdzPackage(SdfAssetPath assetPath, string usdzFilePath)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsCreateNewUsdzPackage__SWIG_1(SdfAssetPath.getCPtr(assetPath), usdzFilePath);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsCreateNewARKitUsdzPackage(SdfAssetPath assetPath, string usdzFilePath, string firstLayerName)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsCreateNewARKitUsdzPackage__SWIG_0(SdfAssetPath.getCPtr(assetPath), usdzFilePath, firstLayerName);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsCreateNewARKitUsdzPackage(SdfAssetPath assetPath, string usdzFilePath)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsCreateNewARKitUsdzPackage__SWIG_1(SdfAssetPath.getCPtr(assetPath), usdzFilePath);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool UsdUtilsComputeAllDependencies(SdfAssetPath assetPath, SdfLayerRefPtrVector layers, StdStringVector assets, StdStringVector unresolvedPaths)
        {
            bool ret = UsdCsPINVOKE.UsdUtilsComputeAllDependencies(SdfAssetPath.getCPtr(assetPath), SdfLayerRefPtrVector.getCPtr(layers), StdStringVector.getCPtr(assets), StdStringVector.getCPtr(unresolvedPaths));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void UsdUtilsModifyAssetPaths(SdfLayerHandle layer, SWIGTYPE_p_std__functionT_std__string_fstd__string_const_RF_t modifyFn)
        {
            UsdCsPINVOKE.UsdUtilsModifyAssetPaths(SdfLayerHandle.getCPtr(layer), SWIGTYPE_p_std__functionT_std__string_fstd__string_const_RF_t.getCPtr(modifyFn));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static SdfLayer UsdUtilsFlattenLayerStack(UsdStageWeakPtr stage, string tag)
        {
            global::System.IntPtr cPtr = UsdCsPINVOKE.UsdUtilsFlattenLayerStack__SWIG_0(UsdStageWeakPtr.getCPtr(stage), tag);
            SdfLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SdfLayer(cPtr, true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SdfLayer UsdUtilsFlattenLayerStack(UsdStageWeakPtr stage)
        {
            global::System.IntPtr cPtr = UsdCsPINVOKE.UsdUtilsFlattenLayerStack__SWIG_1(UsdStageWeakPtr.getCPtr(stage));
            SdfLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SdfLayer(cPtr, true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SdfLayer UsdUtilsFlattenLayerStack(UsdStageWeakPtr stage, SWIGTYPE_p_std__functionT_std__string_fSdfLayerHandle_const_R_std__string_const_RF_t resolveAssetPathFn, string tag)
        {
            global::System.IntPtr cPtr = UsdCsPINVOKE.UsdUtilsFlattenLayerStack__SWIG_2(UsdStageWeakPtr.getCPtr(stage), SWIGTYPE_p_std__functionT_std__string_fSdfLayerHandle_const_R_std__string_const_RF_t.getCPtr(resolveAssetPathFn), tag);
            SdfLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SdfLayer(cPtr, true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static SdfLayer UsdUtilsFlattenLayerStack(UsdStageWeakPtr stage, SWIGTYPE_p_std__functionT_std__string_fSdfLayerHandle_const_R_std__string_const_RF_t resolveAssetPathFn)
        {
            global::System.IntPtr cPtr = UsdCsPINVOKE.UsdUtilsFlattenLayerStack__SWIG_3(UsdStageWeakPtr.getCPtr(stage), SWIGTYPE_p_std__functionT_std__string_fSdfLayerHandle_const_R_std__string_const_RF_t.getCPtr(resolveAssetPathFn));
            SdfLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SdfLayer(cPtr, true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static string UsdUtilsFlattenLayerStackResolveAssetPath(SdfLayerHandle sourceLayer, string assetPath)
        {
            string ret = UsdCsPINVOKE.UsdUtilsFlattenLayerStackResolveAssetPath(SdfLayerHandle.getCPtr(sourceLayer), assetPath);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static void SetEnv(string name, string value)
        {
            UsdCsPINVOKE.SetEnv(name, value);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public static VtValue GetFusedTransform(UsdPrim prim, UsdTimeCode time)
        {
            VtValue ret = new VtValue(UsdCsPINVOKE.GetFusedTransform(UsdPrim.getCPtr(prim), UsdTimeCode.getCPtr(time)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool WriteUsdZip(string usdzFilePath, StdStringVector filesToArchive)
        {
            bool ret = UsdCsPINVOKE.WriteUsdZip(usdzFilePath, StdStringVector.getCPtr(filesToArchive));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static VtValue GetFusedDisplayColor(UsdPrim prim, UsdTimeCode time)
        {
            VtValue ret = new VtValue(UsdCsPINVOKE.GetFusedDisplayColor(UsdPrim.getCPtr(prim), UsdTimeCode.getCPtr(time)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool SetFusedDisplayColor(UsdPrim prim, VtVec4fArray values, UsdTimeCode time)
        {
            bool ret = UsdCsPINVOKE.SetFusedDisplayColor(UsdPrim.getCPtr(prim), VtVec4fArray.getCPtr(values), UsdTimeCode.getCPtr(time));
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static readonly int PXR_USE_NAMESPACES = UsdCsPINVOKE.PXR_USE_NAMESPACES_get();
        public static readonly int JS_VALUE_API_VERSION = UsdCsPINVOKE.JS_VALUE_API_VERSION_get();
        public static readonly int USDGEOM_CYLINDER_API_VERSION = UsdCsPINVOKE.USDGEOM_CYLINDER_API_VERSION_get();
        public static readonly int USDGEOM_XFORM_CACHE_API_VERSION = UsdCsPINVOKE.USDGEOM_XFORM_CACHE_API_VERSION_get();
    }
}
