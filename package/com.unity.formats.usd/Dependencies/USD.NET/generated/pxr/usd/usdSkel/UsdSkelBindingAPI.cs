//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr
{
    public class UsdSkelBindingAPI : UsdAPISchemaBase
    {
        private global::System.Runtime.InteropServices.HandleRef swigCPtr;

        internal UsdSkelBindingAPI(global::System.IntPtr cPtr, bool cMemoryOwn) : base(UsdCsPINVOKE.UsdSkelBindingAPI_SWIGUpcast(cPtr), cMemoryOwn)
        {
            swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
        }

        internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdSkelBindingAPI obj)
        {
            return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
        }

        ~UsdSkelBindingAPI()
        {
            Dispose();
        }

        public override void Dispose()
        {
            lock (this) {
                if (swigCPtr.Handle != global::System.IntPtr.Zero)
                {
                    if (swigCMemOwn)
                    {
                        swigCMemOwn = false;
                        UsdCsPINVOKE.delete_UsdSkelBindingAPI(swigCPtr);
                    }
                    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
                }
                global::System.GC.SuppressFinalize(this);
                base.Dispose();
            }
        }

        public UsdSkelBindingAPI(UsdPrim prim) : this(UsdCsPINVOKE.new_UsdSkelBindingAPI__SWIG_0(UsdPrim.getCPtr(prim)), true)
        {
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public UsdSkelBindingAPI() : this(UsdCsPINVOKE.new_UsdSkelBindingAPI__SWIG_1(), true)
        {
        }

        public UsdSkelBindingAPI(UsdSchemaBase schemaObj) : this(UsdCsPINVOKE.new_UsdSkelBindingAPI__SWIG_2(UsdSchemaBase.getCPtr(schemaObj)), true)
        {
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public new static TfTokenVector GetSchemaAttributeNames(bool includeInherited)
        {
            TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.UsdSkelBindingAPI_GetSchemaAttributeNames__SWIG_0(includeInherited), false);
            return ret;
        }

        public new static TfTokenVector GetSchemaAttributeNames()
        {
            TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.UsdSkelBindingAPI_GetSchemaAttributeNames__SWIG_1(), false);
            return ret;
        }

        public static UsdSkelBindingAPI Get(UsdStageWeakPtr stage, SdfPath path)
        {
            UsdSkelBindingAPI ret = new UsdSkelBindingAPI(UsdCsPINVOKE.UsdSkelBindingAPI_Get(UsdStageWeakPtr.getCPtr(stage), SdfPath.getCPtr(path)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdSkelBindingAPI Apply(UsdPrim prim)
        {
            UsdSkelBindingAPI ret = new UsdSkelBindingAPI(UsdCsPINVOKE.UsdSkelBindingAPI_Apply(UsdPrim.getCPtr(prim)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute GetGeomBindTransformAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_GetGeomBindTransformAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateGeomBindTransformAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateGeomBindTransformAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateGeomBindTransformAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateGeomBindTransformAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateGeomBindTransformAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateGeomBindTransformAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetJointsAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_GetJointsAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateJointsAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointsAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateJointsAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointsAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateJointsAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointsAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetJointIndicesAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_GetJointIndicesAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateJointIndicesAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointIndicesAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateJointIndicesAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointIndicesAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateJointIndicesAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointIndicesAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetJointWeightsAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_GetJointWeightsAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateJointWeightsAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointWeightsAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateJointWeightsAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointWeightsAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateJointWeightsAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointWeightsAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetBlendShapesAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_GetBlendShapesAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateBlendShapesAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateBlendShapesAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateBlendShapesAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateBlendShapesAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateBlendShapesAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdSkelBindingAPI_CreateBlendShapesAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdRelationship GetAnimationSourceRel()
        {
            UsdRelationship ret = new UsdRelationship(UsdCsPINVOKE.UsdSkelBindingAPI_GetAnimationSourceRel(swigCPtr), true);
            return ret;
        }

        public UsdRelationship CreateAnimationSourceRel()
        {
            UsdRelationship ret = new UsdRelationship(UsdCsPINVOKE.UsdSkelBindingAPI_CreateAnimationSourceRel(swigCPtr), true);
            return ret;
        }

        public UsdRelationship GetSkeletonRel()
        {
            UsdRelationship ret = new UsdRelationship(UsdCsPINVOKE.UsdSkelBindingAPI_GetSkeletonRel(swigCPtr), true);
            return ret;
        }

        public UsdRelationship CreateSkeletonRel()
        {
            UsdRelationship ret = new UsdRelationship(UsdCsPINVOKE.UsdSkelBindingAPI_CreateSkeletonRel(swigCPtr), true);
            return ret;
        }

        public UsdRelationship GetBlendShapeTargetsRel()
        {
            UsdRelationship ret = new UsdRelationship(UsdCsPINVOKE.UsdSkelBindingAPI_GetBlendShapeTargetsRel(swigCPtr), true);
            return ret;
        }

        public UsdRelationship CreateBlendShapeTargetsRel()
        {
            UsdRelationship ret = new UsdRelationship(UsdCsPINVOKE.UsdSkelBindingAPI_CreateBlendShapeTargetsRel(swigCPtr), true);
            return ret;
        }

        public UsdGeomPrimvar GetJointIndicesPrimvar()
        {
            UsdGeomPrimvar ret = new UsdGeomPrimvar(UsdCsPINVOKE.UsdSkelBindingAPI_GetJointIndicesPrimvar(swigCPtr), true);
            return ret;
        }

        public UsdGeomPrimvar CreateJointIndicesPrimvar(bool constant, int elementSize)
        {
            UsdGeomPrimvar ret = new UsdGeomPrimvar(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointIndicesPrimvar__SWIG_0(swigCPtr, constant, elementSize), true);
            return ret;
        }

        public UsdGeomPrimvar CreateJointIndicesPrimvar(bool constant)
        {
            UsdGeomPrimvar ret = new UsdGeomPrimvar(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointIndicesPrimvar__SWIG_1(swigCPtr, constant), true);
            return ret;
        }

        public UsdGeomPrimvar GetJointWeightsPrimvar()
        {
            UsdGeomPrimvar ret = new UsdGeomPrimvar(UsdCsPINVOKE.UsdSkelBindingAPI_GetJointWeightsPrimvar(swigCPtr), true);
            return ret;
        }

        public UsdGeomPrimvar CreateJointWeightsPrimvar(bool constant, int elementSize)
        {
            UsdGeomPrimvar ret = new UsdGeomPrimvar(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointWeightsPrimvar__SWIG_0(swigCPtr, constant, elementSize), true);
            return ret;
        }

        public UsdGeomPrimvar CreateJointWeightsPrimvar(bool constant)
        {
            UsdGeomPrimvar ret = new UsdGeomPrimvar(UsdCsPINVOKE.UsdSkelBindingAPI_CreateJointWeightsPrimvar__SWIG_1(swigCPtr, constant), true);
            return ret;
        }

        public bool SetRigidJointInfluence(int jointIndex, float weight)
        {
            bool ret = UsdCsPINVOKE.UsdSkelBindingAPI_SetRigidJointInfluence__SWIG_0(swigCPtr, jointIndex, weight);
            return ret;
        }

        public bool SetRigidJointInfluence(int jointIndex)
        {
            bool ret = UsdCsPINVOKE.UsdSkelBindingAPI_SetRigidJointInfluence__SWIG_1(swigCPtr, jointIndex);
            return ret;
        }

        public bool GetSkeleton(UsdSkelSkeleton skel)
        {
            bool ret = UsdCsPINVOKE.UsdSkelBindingAPI_GetSkeleton(swigCPtr, UsdSkelSkeleton.getCPtr(skel));
            return ret;
        }

        public bool GetAnimationSource(UsdPrim prim)
        {
            bool ret = UsdCsPINVOKE.UsdSkelBindingAPI_GetAnimationSource(swigCPtr, UsdPrim.getCPtr(prim));
            return ret;
        }

        public UsdSkelSkeleton GetInheritedSkeleton()
        {
            UsdSkelSkeleton ret = new UsdSkelSkeleton(UsdCsPINVOKE.UsdSkelBindingAPI_GetInheritedSkeleton(swigCPtr), true);
            return ret;
        }

        public UsdPrim GetInheritedAnimationSource()
        {
            UsdPrim ret = new UsdPrim(UsdCsPINVOKE.UsdSkelBindingAPI_GetInheritedAnimationSource(swigCPtr), true);
            return ret;
        }

        public static bool ValidateJointIndices(SWIGTYPE_p_TfSpanT_int_const_t indices, uint numJoints, /*cstype*/ out string reason)
        {
            bool ret = UsdCsPINVOKE.UsdSkelBindingAPI_ValidateJointIndices__SWIG_0(SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(indices), numJoints, out reason);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static bool ValidateJointIndices(SWIGTYPE_p_TfSpanT_int_const_t indices, uint numJoints)
        {
            bool ret = UsdCsPINVOKE.UsdSkelBindingAPI_ValidateJointIndices__SWIG_1(SWIGTYPE_p_TfSpanT_int_const_t.getCPtr(indices), numJoints);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }
    }
}
