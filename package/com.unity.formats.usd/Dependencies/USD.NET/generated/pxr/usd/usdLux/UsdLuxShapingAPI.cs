//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace pxr
{
    public class UsdLuxShapingAPI : UsdAPISchemaBase
    {
        private global::System.Runtime.InteropServices.HandleRef swigCPtr;

        internal UsdLuxShapingAPI(global::System.IntPtr cPtr, bool cMemoryOwn) : base(UsdCsPINVOKE.UsdLuxShapingAPI_SWIGUpcast(cPtr), cMemoryOwn)
        {
            swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
        }

        internal static global::System.Runtime.InteropServices.HandleRef getCPtr(UsdLuxShapingAPI obj)
        {
            return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
        }

        ~UsdLuxShapingAPI()
        {
            Dispose();
        }

        public override void Dispose()
        {
            lock (this) {
                if (swigCPtr.Handle != global::System.IntPtr.Zero)
                {
                    if (swigCMemOwn)
                    {
                        swigCMemOwn = false;
                        UsdCsPINVOKE.delete_UsdLuxShapingAPI(swigCPtr);
                    }
                    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
                }
                global::System.GC.SuppressFinalize(this);
                base.Dispose();
            }
        }

        public UsdLuxShapingAPI(UsdPrim prim) : this(UsdCsPINVOKE.new_UsdLuxShapingAPI__SWIG_0(UsdPrim.getCPtr(prim)), true)
        {
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public UsdLuxShapingAPI() : this(UsdCsPINVOKE.new_UsdLuxShapingAPI__SWIG_1(), true)
        {
        }

        public UsdLuxShapingAPI(UsdSchemaBase schemaObj) : this(UsdCsPINVOKE.new_UsdLuxShapingAPI__SWIG_2(UsdSchemaBase.getCPtr(schemaObj)), true)
        {
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
        }

        public new static TfTokenVector GetSchemaAttributeNames(bool includeInherited)
        {
            TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.UsdLuxShapingAPI_GetSchemaAttributeNames__SWIG_0(includeInherited), false);
            return ret;
        }

        public new static TfTokenVector GetSchemaAttributeNames()
        {
            TfTokenVector ret = new TfTokenVector(UsdCsPINVOKE.UsdLuxShapingAPI_GetSchemaAttributeNames__SWIG_1(), false);
            return ret;
        }

        public static UsdLuxShapingAPI Get(UsdStageWeakPtr stage, SdfPath path)
        {
            UsdLuxShapingAPI ret = new UsdLuxShapingAPI(UsdCsPINVOKE.UsdLuxShapingAPI_Get(UsdStageWeakPtr.getCPtr(stage), SdfPath.getCPtr(path)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public static UsdLuxShapingAPI Apply(UsdPrim prim)
        {
            UsdLuxShapingAPI ret = new UsdLuxShapingAPI(UsdCsPINVOKE.UsdLuxShapingAPI_Apply(UsdPrim.getCPtr(prim)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute GetShapingFocusAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingFocusAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateShapingFocusAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingFocusAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingFocusAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetShapingFocusTintAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingFocusTintAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateShapingFocusTintAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusTintAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingFocusTintAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusTintAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingFocusTintAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingFocusTintAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetShapingConeAngleAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingConeAngleAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateShapingConeAngleAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeAngleAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingConeAngleAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeAngleAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingConeAngleAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeAngleAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetShapingConeSoftnessAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingConeSoftnessAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateShapingConeSoftnessAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeSoftnessAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingConeSoftnessAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeSoftnessAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingConeSoftnessAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingConeSoftnessAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetShapingIesFileAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingIesFileAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateShapingIesFileAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesFileAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingIesFileAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesFileAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingIesFileAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesFileAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetShapingIesAngleScaleAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingIesAngleScaleAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateShapingIesAngleScaleAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesAngleScaleAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingIesAngleScaleAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesAngleScaleAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingIesAngleScaleAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesAngleScaleAttr__SWIG_2(swigCPtr), true);
            return ret;
        }

        public UsdAttribute GetShapingIesNormalizeAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_GetShapingIesNormalizeAttr(swigCPtr), true);
            return ret;
        }

        public UsdAttribute CreateShapingIesNormalizeAttr(VtValue defaultValue, bool writeSparsely)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesNormalizeAttr__SWIG_0(swigCPtr, VtValue.getCPtr(defaultValue), writeSparsely), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingIesNormalizeAttr(VtValue defaultValue)
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesNormalizeAttr__SWIG_1(swigCPtr, VtValue.getCPtr(defaultValue)), true);
            if (UsdCsPINVOKE.SWIGPendingException.Pending) throw UsdCsPINVOKE.SWIGPendingException.Retrieve();
            return ret;
        }

        public UsdAttribute CreateShapingIesNormalizeAttr()
        {
            UsdAttribute ret = new UsdAttribute(UsdCsPINVOKE.UsdLuxShapingAPI_CreateShapingIesNormalizeAttr__SWIG_2(swigCPtr), true);
            return ret;
        }
    }
}
