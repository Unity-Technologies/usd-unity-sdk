#usda 1.0
(
    endTimeCode = 1
    framesPerSecond = 24
    metersPerUnit = 1
    startTimeCode = 1
    timeCodesPerSecond = 24
    upAxis = "Y"
)

def PointInstancer "instancer"
{
    int64[] invisibleIds = []
    quath[] orientations = [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)]
    point3f[] positions = [(-0.16644895, 0.3755865, 0.3704425), (0.33355105, -0.12441349, -0.12955749), (-0.41644895, 0.12558651, -0.3795575), (0.08355105, -0.3744135, 0.12044251), (-0.29144895, -0.24941349, -0.0045574903), (0.20855105, 0.2505865, 0.4954425), (-0.04144895, -0.4994135, 0.24544251), (0.45855105, 0.0005865097, -0.2545575), (-0.47894895, -0.4369135, 0.4329425), (0.02105105, 0.06308651, -0.06705749)]
    int[] protoIndices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    rel prototypes = </instancer/Prototypes/Root>

    def Scope "Prototypes"
    {
        def Xform "Root"
        {
            def Cube "cube1"
            {
                double size = 0.10000000149011612
                matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
                uniform token[] xformOpOrder = ["xformOp:transform"]
            }
        }
    }
}

